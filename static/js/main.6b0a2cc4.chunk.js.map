{"version":3,"sources":["context/TestData.js","context/NewStudentObj.js","context/StudentContext.js","components/studentOverview/StudentTableRow.js","components/studentOverview/StudentTable.js","components/studentOverview/StudentOverviewContainer.js","components/addStudent/AddStudentSectionTitle.js","components/addStudent/AddBasicInfo.js","components/addStudent/individualTestAdd/PsatAdd.js","components/addStudent/individualTestAdd/SatAdd.js","components/addStudent/individualTestAdd/ActAdd.js","components/addStudent/individualTestAdd/SubjectTestAdd.js","components/addStudent/individualTestAdd/ApAdd.js","components/addStudent/TestScoresAdd.js","components/addStudent/ReactHookFormSelect.js","components/addStudent/CollegeListAdd.js","components/addStudent/AddStudentContainer.js","components/studentSingle/test/Test.js","components/studentSingle/test/APTest.js","components/studentSingle/test/SubjectTest.js","components/studentSingle/test/TestContainer.js","components/studentSingle/CollegeList.js","components/studentSingle/StudentSingleContainer.js","components/studentSingle/editStudent/EditStudentSectionTitle.js","components/studentSingle/editStudent/BasicInfo.js","components/studentSingle/editStudent/individualTestEdit/PsatEdit.js","components/studentSingle/editStudent/individualTestEdit/SatEdit.js","components/studentSingle/editStudent/individualTestEdit/ActEdit.js","components/studentSingle/editStudent/individualTestEdit/SubjectTestEdit.js","components/studentSingle/editStudent/individualTestEdit/ApEdit.js","components/studentSingle/editStudent/TestScoresEdit.js","components/studentSingle/editStudent/ReactHookFormSelect.js","components/studentSingle/editStudent/CollegeListEdit.js","components/studentSingle/editStudent/EditStudentContainer.js","components/Routes.js","components/Main.js","App.js","index.js"],"names":["sampleStudents","id","firstName","lastName","email","highSchool","grade","major","early","progress","collegeList","collegeName","cycle","payment","amountDue","amountPaid","expectedRevenue","psat","readingWriting","math","sat","verbal","essay","act","stem","ela","aps","type","score","satSubjectTests","newStudentObj","uuidv4","StudentContext","React","createContext","useStudent","useContext","StudentProvider","children","useState","students","setStudents","selectedStudentId","setSelectedStudentId","newStudent","setNewStudent","selectedStudent","find","student","value","handleStudentSelect","handleStudentAdd","handleStudentChange","newStudents","index","findIndex","r","findStudent","handleResetNewStudent","handleAppendNewStudent","studentToAdd","push","handleDeleteStudent","filter","replaceStudents","localStudents","Provider","StudentTableRow","classes","useStyles","history","useHistory","map","TableRow","onClick","handleSelectedStudent","className","tr","TableCell","align","makeStyles","theme","background","cursor","StudentTable","TableContainer","component","Paper","Table","aria-label","TableHead","TableBody","StudentsContainer","Button","variant","color","size","button","startIcon","Typography","style","display","marginBottom","spacing","marginRight","AddtudentAddSectionTitle","title","BasicInfo","register","errors","TextField","label","name","defaultValue","inputRef","required","error","helperText","message","pattern","max","min","PsatAdd","valueAsNumber","SatAdd","SubjectTestAdd","control","useFieldArray","keyName","fields","remove","append","field","container","ref","root","margin","width","alignItems","height","ApAdd","TestScoresAdd","Box","mb","mt","Divider","ReactHookFormSelect","props","formClassName","labelId","FormControl","formControl","InputLabel","as","Select","minWidth","CollegeListAdd","collegeCycles","MenuItem","AddStudentContainer","useForm","defaultValues","handleSubmit","onSubmit","data","fontSize","item","padding","Test","testType","ListItem","ListItemText","primary","secondary","APTest","List","ap","SubjectTest","test","StudentTestScores","handleSumScores","handleScoreBreakdown","testScores","CollegeListContainer","college","scope","StudentContainer","useParams","studentId","Grid","justify","xs","sm","Card","CardContent","EditStudentAddSectionTitle","SubjectTestEdit","ApEdit","TestScoresEdit","CollegeListEdit","EditStudentContainer","Routes","exact","path","StudentOverviewOverviewContainer","StudentSingleContainer","Main","content","appBarHeight","appBarSpacer","mixins","toolbar","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b0a2cc4.chunk.js","sourcesContent":["export const sampleStudents = [\r\n    {\r\n      id: \"1\", \r\n      firstName: 'Harry',\r\n      lastName: 'Potter',\r\n      email: 'hpotter@gmail.com',\r\n      highSchool: 'Hogwarts High School',\r\n      grade: 12,\r\n      major: 'Neuroscience',\r\n      early: true,\r\n      progress: 'Started',\r\n      collegeList: [\r\n        {\r\n          id: 1,\r\n          collegeName: 'Harvard',\r\n          cycle: 'Regular Decision'\r\n        },\r\n        {\r\n          id: 2,\r\n          collegeName: 'Brown',\r\n          cycle: 'Early Action'\r\n        }\r\n      ],\r\n      payment: {\r\n        amountDue: 100,\r\n        amountPaid: 200,\r\n        expectedRevenue: 300\r\n      },\r\n      psat: {\r\n        readingWriting: 520,\r\n        math: 510\r\n      },\r\n    sat: {\r\n      math: 800,\r\n      verbal: 800,\r\n      essay: 8\r\n    },\r\n    act: {\r\n      stem: 19,\r\n      ela: 24\r\n    },\r\n    aps: [\r\n      {\r\n        id: 1234231,\r\n        type: 'AP Physics',\r\n        score: 4  \r\n      },\r\n      {\r\n        id: 2432423,\r\n        type: 'AP Biology',\r\n        score: 5  \r\n      }\r\n    ],\r\n    satSubjectTests: [\r\n      {\r\n        id: 1, \r\n        type: 'Math Level II',\r\n        score: 800  \r\n      },\r\n      {\r\n        id: 2, \r\n        type: 'Biology M',\r\n        score: 750  \r\n      }\r\n    ]\r\n    },\r\n    {\r\n      id: \"2\", \r\n      firstName: 'Hermione',\r\n      lastName: 'Granger',\r\n      email: 'hgranger@gmail.com',\r\n      highSchool: 'Hogwarts High School',\r\n      grade: 12,\r\n      major: 'Mathematics',\r\n      early: true,\r\n      progress: 'Started',\r\n      collegeList: [\r\n        {\r\n          id: 1,\r\n          collegeName: 'UC Berkeley',\r\n          cycle: 'Regular Decision'\r\n        },\r\n        {\r\n          id: 2,\r\n          collegeName: 'Harvard',\r\n          cycle: 'Early Action'\r\n        }\r\n      ],\r\n      payment: {\r\n        amountDue: 50,\r\n        amountPaid: 100,\r\n        expectedRevenue: 150\r\n      },\r\n      psat: {\r\n        readingWriting: 520,\r\n        math: 510\r\n      },\r\n      sat: {\r\n        math: 750,\r\n        verbal: 750,\r\n        essay: 8\r\n      },\r\n      act: {\r\n        stem: 30,\r\n        ela: 30\r\n      },\r\n      aps: [\r\n        {\r\n          id: 4324321,\r\n          type: 'AP Latin',\r\n          score: 5  \r\n        },\r\n        {\r\n          id: 2243232,\r\n          type: 'AP Chemistry',\r\n          score: 5  \r\n        }\r\n      ],\r\n      satSubjectTests: [\r\n        {\r\n          id: 1,  \r\n          type: 'Math Level II',\r\n          score: 800  \r\n        },\r\n        {\r\n          id: 2, \r\n          type: 'US History',\r\n          score: 750  \r\n        }\r\n      ] \r\n    }\r\n  ]\r\n  \r\n// export const sampleScores = [ \r\n//     {\r\n//       id: 1,\r\n//       psat: {\r\n//           readingWriting: 520,\r\n//           math: 510\r\n//         },\r\n//       sat: {\r\n//         math: 800,\r\n//         verbal: 800,\r\n//         essay: 10\r\n//       },\r\n//       act: {\r\n//         stem: 19,\r\n//         ela: 24\r\n//       },\r\n//       aps: [\r\n//         {\r\n//           id: 1,\r\n//           type: 'AP Physics',\r\n//           score: 4  \r\n//         },\r\n//         {\r\n//           id: 2,\r\n//           type: 'AP Biology',\r\n//           score: 5  \r\n//         }\r\n//       ],\r\n//       satSubjectTests: [\r\n//         {\r\n//           id: 1,\r\n//           type: 'Math Level II',\r\n//           score: 800  \r\n//         },\r\n//         {\r\n//           id: 2,\r\n//           type: 'Biology M',\r\n//           score: 750  \r\n//         }\r\n//       ]    \r\n//     },\r\n//     {\r\n//       id: 2,\r\n//       psat: {\r\n//         readingWriting: 520,\r\n//         math: 510\r\n//       },\r\n//       sat: {\r\n//         math: 750,\r\n//         verbal: 750,\r\n//         essay: 10\r\n//       },\r\n//       act: {\r\n//         stem: 30,\r\n//         ela: 30\r\n//       },\r\n//       aps: [\r\n//         {\r\n//           id: 1,\r\n//           type: 'AP Latin',\r\n//           score: 5  \r\n//         },\r\n//         {\r\n//           id: 2,\r\n//           type: 'AP Chemistry',\r\n//           score: 5  \r\n//         }\r\n//       ],\r\n//       satSubjectTests: [\r\n//         {\r\n//           id: 1,\r\n//           type: 'Math Level II',\r\n//           score: 800  \r\n//         },\r\n//         {\r\n//           id:2,\r\n//           type: 'US History',\r\n//           score: 750  \r\n//         }\r\n//       ]    \r\n//     }\r\n//   ]\r\n  ","import { v4 as uuidv4 } from 'uuid'\r\n\r\nexport const newStudentObj = {\r\n  id: uuidv4(),\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  highSchool: '',\r\n  grade: 0,\r\n  major: '',\r\n  early: true,\r\n  progress: 'Started',\r\n  collegeList: [\r\n  {\r\n      id: uuidv4(),\r\n      collegeName: '',\r\n      cycle: ''\r\n  }\r\n  ],\r\n  payment: {\r\n      amountDue: 0,\r\n      amountPaid: 0,\r\n      expectedRevenue: 0\r\n  },\r\n  psat: {\r\n    readingWriting: 0,\r\n    math: 0\r\n  },\r\n  sat: {\r\n    math: 0,\r\n    verbal: 0,\r\n    essay: 0\r\n  },\r\n  act: {\r\n    stem: 0,\r\n    ela: 0\r\n  },\r\n  aps: [\r\n    {\r\n      id: uuidv4(),\r\n      type: '',\r\n      score: 0  \r\n    }\r\n  ],\r\n  satSubjectTests: [\r\n    {\r\n      id: uuidv4(),\r\n      type: '',\r\n      score: 0  \r\n    }\r\n  ]  \r\n}","import React, { useContext, useState } from 'react'\r\nimport { sampleStudents } from './TestData'\r\nimport { newStudentObj } from './NewStudentObj'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nconst StudentContext = React.createContext()\r\n\r\nexport function useStudent() {\r\n    return useContext(StudentContext)\r\n}\r\n\r\nexport function StudentProvider({ children }) {\r\n  const [students, setStudents] = useState(sampleStudents)\r\n  const [selectedStudentId, setSelectedStudentId] = useState()\r\n  const [newStudent, setNewStudent] = useState(newStudentObj)\r\n  const selectedStudent = students.find(student => student.id === selectedStudentId)\r\n\r\n  function handleStudentSelect(id) {\r\n    setSelectedStudentId(id)\r\n  }\r\n\r\n  function findStudent(id) {\r\n    return students.find(student => student.id === id)\r\n  }\r\n\r\n  function handleStudentAdd() {\r\n      setStudents([...students, newStudent])\r\n  }\r\n\r\n  function handleStudentChange(id, student) {\r\n      const newStudents = [...students]\r\n      const index = newStudents.findIndex(r => r.id === id)\r\n      newStudents[index] = student\r\n      setStudents(newStudents)\r\n  }\r\n\r\n  function handleResetNewStudent() {\r\n    setNewStudent({...newStudentObj, ...{id: uuidv4()}})\r\n  }\r\n\r\n  function handleAppendNewStudent(studentToAdd) {\r\n    const newStudents = students\r\n    newStudents.push(studentToAdd)\r\n    setStudents(newStudents)\r\n  }\r\n\r\n  function handleDeleteStudent(id) {\r\n    let newStudents = [...students]\r\n    newStudents = newStudents.filter(student => student.id !== id)\r\n    setStudents(newStudents)\r\n  }\r\n\r\n  function replaceStudents(localStudents) {\r\n    setStudents(localStudents)\r\n  }\r\n\r\n  const value = {\r\n      students,\r\n      selectedStudent,\r\n      newStudent,\r\n      handleStudentSelect,\r\n      handleStudentAdd,\r\n      handleStudentChange,\r\n      findStudent,\r\n      handleResetNewStudent,\r\n      handleAppendNewStudent,\r\n      handleDeleteStudent,\r\n      replaceStudents\r\n  }\r\n\r\n  return (\r\n      <StudentContext.Provider value={value}>\r\n          {children}\r\n      </StudentContext.Provider>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from 'react-router-dom'\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\nimport TableCell from \"@material-ui/core/TableCell\"\r\n\r\n// context\r\nimport { useStudent } from '../../context/StudentContext' \r\n\r\nexport default function StudentTableRow() {\r\n  const classes = useStyles()\r\n  const history = useHistory()  \r\n  const {\r\n      students,\r\n      handleStudentSelect\r\n  } = useStudent()\r\n\r\n  function handleSelectedStudent(student) {\r\n    handleStudentSelect(student.id)\r\n    history.push(`/students/view/${student.id}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {students.map((student) => (\r\n          <TableRow key={student.id} onClick={ () => handleSelectedStudent(student)} className={classes.tr}>\r\n            <TableCell>\r\n                    {student.firstName + ' ' + student.lastName}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{student.highSchool}</TableCell>\r\n                <TableCell align=\"center\">{student.major}</TableCell>\r\n                <TableCell align=\"center\">{student.sat.math + student.sat.verbal}</TableCell>\r\n                <TableCell align=\"center\">{student.early ? 'Yes' : 'No'}</TableCell>\r\n                <TableCell align=\"center\">{student.progress}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tr: {\r\n      '&:hover': {\r\n        background: \"aliceblue\",\r\n        cursor: \"pointer\"\r\n     },\r\n    },\r\n}));\r\n  ","import React from 'react';\r\n\r\n// Material Table\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n// components\r\nimport StudentTableRow from './StudentTableRow'\r\n\r\nexport default function StudentTable() {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className=\"student-table\" aria-label=\"student table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell align=\"center\">High School</TableCell>\r\n            <TableCell align=\"center\">Intended Major</TableCell>\r\n            <TableCell align=\"center\">SAT</TableCell>\r\n            <TableCell align=\"center\">EA/ED?</TableCell>\r\n            <TableCell align=\"center\">Common App</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          <StudentTableRow />\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}","import React from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\n// import { useStudent } from '../../context/StudentContext'\r\n\r\n// button\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\r\n\r\n// components\r\nimport StudentTable from './StudentTable'\r\n\r\n// const LOCAL_STORAGE_KEY = 'studentRoster.roster'\r\n\r\nexport default function StudentsContainer() {\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    // const { students, replaceStudents } = useStudent()\r\n  \r\n    function handleAddStudent() {\r\n      history.push('/student-roster/new')\r\n    }\r\n    \r\n    // useEffect(() => {\r\n    //     const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY)\r\n    //     if (recipeJSON != null) replaceStudents(JSON.parse(recipeJSON))\r\n    // }, [])\r\n\r\n    // useEffect(() => {\r\n    //     localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(students))\r\n    // }, [students])\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                className={classes.button}\r\n                startIcon={<AddCircleIcon />}\r\n                onClick={handleAddStudent}\r\n            >\r\n                Add Student\r\n            </Button>\r\n            <Typography color=\"textSecondary\" style={{display: 'inline-block'}}>\r\n                Click on a row to view student details and edit or delete the student. \r\n            </Typography>\r\n            <StudentTable />\r\n        </div>\r\n    )\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      marginBottom: theme.spacing(2),\r\n      marginRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function AddtudentAddSectionTitle({ title, size }) {\r\n    return (\r\n        <Typography variant={size}>\r\n            {title}\r\n        </Typography>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function BasicInfo({ register, errors, student }) {\r\n    return (\r\n    <>\r\n        <TextField \r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            defaultValue={student.firstName}\r\n            inputRef={register({ required: \"Required\" })}\r\n            error={errors.firstName ? true : false}\r\n            helperText={errors.firstName && errors.firstName.message}\r\n        />\r\n        <TextField \r\n            label=\"Last Name\"\r\n            name=\"lastName\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            defaultValue={student.lastName}\r\n            inputRef={register({ required: \"Required\" })}\r\n            error={errors.lastName ? true : false}\r\n            helperText={errors.lastName && errors.lastName.message}\r\n        />\r\n        <TextField \r\n            label=\"Email\"\r\n            name=\"email\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            defaultValue={student.email}\r\n            inputRef={register({\r\n                required: \"required\",\r\n                pattern: {\r\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                    message: \"Entered value does not match email format\"\r\n                }\r\n            })}\r\n            error={errors.email ? true : false}\r\n            helperText={errors.email && errors.email.message}\r\n        />  \r\n        <TextField \r\n            label=\"High School\"\r\n            name=\"highSchool\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            defaultValue={student.highSchool}\r\n            inputRef={register({ required: \"Required\" })}\r\n            error={errors.highSchool ? true : false}\r\n            helperText={errors.highSchool && errors.highSchool.message}\r\n        />  \r\n        <TextField \r\n            label=\"Grade\"\r\n            name=\"grade\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            defaultValue={student.grade}\r\n            inputRef={register({ \r\n                required: \"Required\",\r\n                max: {\r\n                    value: 14,\r\n                    message: \"Grade must be less than 14.\"\r\n                },\r\n                min: {\r\n                    value: 1,\r\n                    message: \"Grade must be greater than 0.\"\r\n                }\r\n            })}\r\n            error={errors.grade ? true : false}\r\n            helperText={errors.grade && errors.grade.message}\r\n        />  \r\n        <TextField \r\n            label=\"Prospective Major\"\r\n            name=\"major\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            defaultValue={student.major}\r\n            inputRef={register()}\r\n        /> \r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport AddStudentSectionTitle from '../AddStudentSectionTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport default function PsatAdd({ register, errors, psat }) {\r\n    return (\r\n        <>\r\n            <AddStudentSectionTitle title=\"PSAT\" size=\"h6\"/>\r\n                <TextField \r\n                    label=\"Math\"\r\n                    name=\"psat.math\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    defaultValue={psat.math}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 760,\r\n                            message: \"Score must be 760 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.psat && errors.psat.math) ? true : false}\r\n                    helperText={(errors.psat && errors.psat.math) && errors.psat.math.message}\r\n                /> \r\n                <TextField \r\n                    label=\"Reading & Writing\"\r\n                    name=\"psat.readingWriting\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    defaultValue={psat.readingWriting}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 760,\r\n                            message: \"Score must be 760 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"                        \r\n                        }\r\n                    })}\r\n                    error={(errors.psat && errors.psat.readingWriting) ? true : false}\r\n                    helperText={(errors.psat && errors.psat.readingWriting) && errors.psat.readingWriting.message}\r\n                />  \r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport AddStudentSectionTitle from '../AddStudentSectionTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport default function SatAdd({ register, errors, sat }) {\r\n    return (\r\n        <>\r\n            <AddStudentSectionTitle title=\"SAT\" size=\"h6\"/>\r\n                <TextField \r\n                    label=\"Math\"\r\n                    variant=\"outlined\"\r\n                    name=\"sat.math\"\r\n                    type=\"number\"\r\n                    defaultValue={sat.math}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 800,\r\n                            message: \"Score must be 800 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.sat && errors.sat.math) ? true : false}\r\n                    helperText={(errors.sat && errors.sat.math) && errors.sat.math.message}\r\n                /> \r\n                <TextField \r\n                    label=\"Verbal\"\r\n                    variant=\"outlined\"\r\n                    name=\"sat.verbal\"\r\n                    type=\"number\"\r\n                    defaultValue={sat.verbal}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 800,\r\n                            message: \"Score must be 800 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.sat && errors.sat.verbal) ? true : false}\r\n                    helperText={(errors.sat && errors.sat.verbal) && errors.sat.verbal.message}\r\n                />  \r\n                <TextField \r\n                    label=\"Essay\"\r\n                    variant=\"outlined\"\r\n                    name=\"sat.essay\"\r\n                    type=\"number\"\r\n                    defaultValue={sat.essay}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 8,\r\n                            message: \"Score must be 8 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.sat && errors.sat.essay) ? true : false}\r\n                    helperText={(errors.sat && errors.sat.essay) && errors.sat.essay.message}\r\n                />  \r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport AddStudentSectionTitle from '../AddStudentSectionTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport default function SatAdd({ register, errors, act }) {\r\n    return (\r\n        <>\r\n            <AddStudentSectionTitle title=\"ACT\" size=\"h6\"/>\r\n                <TextField \r\n                    label=\"STEM\"\r\n                    variant=\"outlined\"\r\n                    name=\"act.stem\"\r\n                    type=\"number\"\r\n                    defaultValue={act.stem}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 36,\r\n                            message: \"Score must be 36 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.act && errors.act.stem) ? true : false}\r\n                    helperText={(errors.act && errors.act.stem) && errors.act.stem.message}\r\n                /> \r\n                <TextField \r\n                    label=\"ELA\"\r\n                    variant=\"outlined\"\r\n                    name=\"act.ela\"\r\n                    type=\"number\"\r\n                    defaultValue={act.ela}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 36,\r\n                            message: \"Score must be 36 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.act && errors.act.ela) ? true : false}\r\n                    helperText={(errors.act && errors.act.ela) && errors.act.ela.message}\r\n                />   \r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { useFieldArray} from \"react-hook-form\"\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddStudentSectionTitle from '../AddStudentSectionTitle'\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\n\r\nexport default function SubjectTestAdd({ control, register, errors }) {\r\n    const classes = useStyles();\r\n    const { fields, remove, append } = useFieldArray(\r\n        {\r\n          control,\r\n          name: \"satSubjectTests\",\r\n          keyName: 'react-hook-id' // deafult and you can rename to others\r\n        }\r\n    );\r\n\r\n    return (\r\n    <>\r\n        <AddStudentSectionTitle title=\"SAT Subject Tests\" size=\"h6\" />\r\n        {fields.map((field, index) => {\r\n          return (\r\n            <div key={field.id} className={classes.container}>\r\n                <TextField \r\n                    label=\"Test Type\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name={`satSubjectTests[${index}].type`}\r\n                    defaultValue={`${field.type}`}\r\n                    inputRef={register()}\r\n                />\r\n                <TextField \r\n                    label=\"Test Score\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name={`satSubjectTests[${index}].score`}\r\n                    defaultValue={`${field.score}`}\r\n                    inputRef={register({ valueAsNumber: true,})}\r\n                />\r\n\r\n                {/* hidden input to register the id */}\r\n                <input type=\"hidden\" key={field.id} name={`satSubjectTests[${index}].id`} ref={register()} defaultValue={`${field.id}`} />\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    startIcon={<RemoveCircleOutlineIcon />}\r\n                    onClick={() => remove(index)}\r\n                >\r\n                    Remove Subject Test\r\n                </Button> \r\n            </div>\r\n          );\r\n        })} \r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            className={classes.button}\r\n            startIcon={<AddCircleIcon />}\r\n            onClick={() => append({ id: uuidv4(), type: \"\", score: 0 })}\r\n        >\r\n            Add Subject Test\r\n        </Button> \r\n    </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        },\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        height: '35px',\r\n    }\r\n  }));\r\n\r\n","import React from 'react'\r\nimport { useFieldArray} from \"react-hook-form\"\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddStudentSectionTitle from '../AddStudentSectionTitle'\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\n\r\nexport default function ApAdd({ control, register, errors }) {\r\n    const classes = useStyles();\r\n    const { fields, remove, append } = useFieldArray(\r\n        {\r\n          control,\r\n          name: \"aps\",\r\n          keyName: 'react-hook-id' // deafult and you can rename to others\r\n        }\r\n    );\r\n\r\n    return (\r\n    <>\r\n        <AddStudentSectionTitle title=\"AP Exams\" size=\"h6\" />\r\n        {fields.map((field, index) => {\r\n          return (\r\n            <div key={field.id} className={classes.container}>\r\n                <TextField \r\n                    label=\"Test Type\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name={`aps[${index}].type`}\r\n                    defaultValue={`${field.type}`}\r\n                    inputRef={register()}\r\n                />\r\n                <TextField \r\n                    label=\"Test Score\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name={`aps[${index}].score`}\r\n                    defaultValue={`${field.score}`}\r\n                    inputRef={register({ valueAsNumber: true,})}\r\n                />\r\n\r\n                {/* hidden input to register the id */}\r\n                <input type=\"hidden\" key={field.id} name={`aps[${index}].id`} ref={register()} defaultValue={`${field.id}`} />\r\n                \r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    startIcon={<RemoveCircleOutlineIcon />}\r\n                    onClick={() => remove(index)}\r\n                >\r\n                    Remove AP Exam\r\n                </Button> \r\n            </div>\r\n          );\r\n        })} \r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            className={classes.button}\r\n            startIcon={<AddCircleIcon />}\r\n            onClick={() => append({ id: uuidv4(), type: \"\", score: 0 })}\r\n        >\r\n            Add AP Exam\r\n        </Button> \r\n    </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        },\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        height: '35px',\r\n    }\r\n  }));\r\n\r\n","import React from 'react'\r\n// import { useStudent } from '../../../../context/StudentContext';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n// components\r\nimport PsatAdd from './individualTestAdd/PsatAdd'\r\nimport SatAdd from './individualTestAdd/SatAdd'\r\nimport ActAdd from './individualTestAdd/ActAdd'\r\nimport SubjectTestAdd from './individualTestAdd/SubjectTestAdd'\r\nimport APAdd from './individualTestAdd/ApAdd'\r\n\r\nexport default function TestScoresAdd({ register, errors, student, control }) {\r\n    return (\r\n        <> \r\n        <Box mb={3} mt={2}>\r\n            <PsatAdd register={register} errors={errors} psat={student.psat} />\r\n        </Box>\r\n        <Divider variant=\"middle\" />\r\n        <Box mb={3} mt={2}>\r\n            <SatAdd register={register} errors={errors} sat={student.sat} />\r\n        </Box>\r\n        <Divider variant=\"middle\" />\r\n        <Box mb={3} mt={2}>\r\n            <ActAdd register={register} errors={errors} act={student.act} /> \r\n        </Box>\r\n        <Divider variant=\"middle\" />\r\n        <Box mb={3} mt={2}>\r\n            <SubjectTestAdd \r\n                register={register} \r\n                errors={errors} \r\n                control={control}\r\n            />\r\n        </Box>\r\n        <Divider variant=\"middle\" />\r\n        <Box mb={3} mt={2}>\r\n            <APAdd \r\n                register={register} \r\n                errors={errors} \r\n                control={control}\r\n            />\r\n        </Box>\r\n        </>\r\n    )\r\n}\r\n\r\n","import FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Controller } from \"react-hook-form\";\r\n\r\nconst ReactHookFormSelect = ({\r\n  name,\r\n  label,\r\n  control,\r\n  defaultValue,\r\n  children,\r\n  formClassName,\r\n  ...props\r\n}) => {\r\n  const labelId = `${name}-label`;\r\n  const classes = useStyles();\r\n  return (\r\n    <FormControl {...props} variant=\"outlined\" className={classes.formControl}>\r\n      <InputLabel id={labelId}>{label}</InputLabel>\r\n      <Controller\r\n        as={\r\n          <Select labelId={labelId} label={label}>\r\n            {children}\r\n          </Select>\r\n        }\r\n        name={name}\r\n        control={control}\r\n        defaultValue={defaultValue}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\nexport default ReactHookFormSelect;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 180,\r\n    },\r\n  }));","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { useFieldArray} from \"react-hook-form\"\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ReactHookFormSelect from './ReactHookFormSelect'\r\n\r\n\r\n\r\nexport default function CollegeListAdd({ control, register }) {\r\n    const classes = useStyles();\r\n    const { fields, remove, append } = useFieldArray(\r\n        {\r\n          control,\r\n          name: \"collegeList\",\r\n          keyName: 'react-hook-id' // deafult and you can rename to others\r\n        }\r\n    );\r\n\r\n    return (\r\n    <>\r\n        {fields.map((field, index) =>\r\n            <div key={field.id} className={classes.container}>\r\n                <TextField \r\n                    label='College'\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name={`collegeList[${index}].collegeName`}\r\n                    defaultValue={`${field.collegeName}`}\r\n                    inputRef={register()}\r\n                />\r\n\r\n                <ReactHookFormSelect\r\n                    name={`collegeList[${index}].cycle`}\r\n                    label=\"Cycle\"\r\n                    defaultValue={`${field.cycle}`}\r\n                    control={control}\r\n                >\r\n                {collegeCycles.map((cycle) => (\r\n                        <MenuItem key={cycle} value={cycle}>\r\n                                {cycle}\r\n                        </MenuItem>\r\n                    ))}\r\n                </ReactHookFormSelect>\r\n\r\n                {/* hidden input to register the id */}\r\n                <input type=\"hidden\" key={field.id} name={`collegeList[${index}].id`} ref={register()} defaultValue={`${field.id}`} />\r\n\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    startIcon={<RemoveCircleOutlineIcon />}\r\n                    onClick={() => remove(index)}\r\n                >\r\n                    Remove College\r\n                </Button>\r\n            </div>\r\n        )}\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            className={classes.button}\r\n            startIcon={<AddCircleIcon />}\r\n            onClick={() => append({ id: uuidv4(), collegeName: \"\", cycle: \"\" })}\r\n        >\r\n            Add College\r\n        </Button> \r\n    </>\r\n    )\r\n}\r\n\r\nconst collegeCycles = ['Early Action', 'Early Decision', 'Regular Decision']\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        },\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        height: '35px',\r\n    }\r\n  }));\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form'\r\nimport { useStudent } from '../../context/StudentContext'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n// material ui \r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Button from '@material-ui/core/Button'\r\n\r\n// components\r\nimport AddStudentSectionTitle from './AddStudentSectionTitle'\r\nimport AddBasicInfo from './AddBasicInfo'\r\nimport TestScoresAdd from './TestScoresAdd'\r\nimport CollegeListAdd from './CollegeListAdd'\r\n\r\nexport default function AddStudentContainer() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const {\r\n      handleResetNewStudent,\r\n      newStudent,\r\n      handleAppendNewStudent\r\n    } = useStudent()\r\n\r\n    const { register, control, handleSubmit, errors } = useForm({\r\n        defaultValues: {\r\n          sat: newStudent.sat,\r\n          aps: newStudent.aps,\r\n          collegeList: newStudent.collegeList\r\n        }\r\n      });\r\n\r\n    const onSubmit = data => { \r\n        handleAppendNewStudent({...newStudent, ...data})\r\n        handleResetNewStudent()\r\n        history.push(`/student-roster/`)\r\n    }\r\n\r\n    return (\r\n    <form className={classes.root} onSubmit={handleSubmit(onSubmit)}>\r\n        <Box mb={3} mt={2}>\r\n            <AddStudentSectionTitle title=\"Basic Information\" size=\"h5\" />\r\n            <AddBasicInfo register={register} errors={errors} student={newStudent} />\r\n        </Box>\r\n        <Divider />\r\n        <Box mb={3} mt={2}>\r\n            <AddStudentSectionTitle title=\"Test Scores\" size=\"h5\" />\r\n            <TestScoresAdd register={register} errors={errors} student={newStudent} control={control} />\r\n        </Box>\r\n        <Divider />\r\n        <Box mb={3} mt={2}>\r\n            <AddStudentSectionTitle title=\"College List \" size=\"h5\" />\r\n            <CollegeListAdd register={register} errors={errors} control={control} />\r\n       </Box>\r\n        <Box mb={3} mt={2}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                type=\"submit\"            \r\n            >\r\n                Submit\r\n            </Button>\r\n        </Box>\r\n    </form>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(2),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }));\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// list\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root:{\r\n    fontSize:'.9em',\r\n  },\r\n  item: {\r\n    padding: 0\r\n  },\r\n}));\r\n\r\nexport default function Test({ testType }) {\r\n  const classes = useStyles();\r\n\r\n    return (\r\n        <ListItem classes={{ root: classes.item }}>\r\n            <ListItemText\r\n              classes={{ primary:classes.root, secondary:classes.root }}\r\n              primary={testType}\r\n            />\r\n        </ListItem>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Test from './Test'\r\n\r\n// list\r\nimport List from '@material-ui/core/List';\r\n\r\nexport default function APTest({ aps }) {\r\n    return (\r\n        <List>\r\n            {aps.map((ap) => \r\n                <Test key={ap.id} testType={`${ap.type}: ${ap.score}`}  />\r\n            )} \r\n        </List>\r\n    )\r\n}","// NOTE KNOWN ERROR WITH TEST.ID BEING REMOVED FROM REACT FORM\r\n\r\nimport React from 'react';\r\nimport Test from './Test'\r\n\r\n// list\r\nimport List from '@material-ui/core/List';\r\n\r\nexport default function SubjectTest({ satSubjectTests }) {\r\n    return (\r\n        <List>\r\n            {satSubjectTests.map((test, index) => \r\n                <Test key={test.id} testType={`SAT II ${test.type}: ${test.score}`}  />\r\n            )} \r\n        </List>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Test from './Test'\r\nimport APTest from './APTest'\r\nimport SubjectTest from './SubjectTest'\r\n\r\n// for list\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nexport default function StudentTestScores({ student }) {\r\n  const {\r\n    psat,\r\n    sat,\r\n    act,\r\n    aps,\r\n    satSubjectTests\r\n  } = student\r\n \r\n  function handleSumScores(testType) {\r\n    if (testType === \"psat\") {\r\n      return psat.readingWriting + psat.math\r\n    } else if (testType === 'sat') {\r\n      return sat.math + sat.verbal\r\n    } else if (testType === 'act') {\r\n      return (act.stem + act.ela)/2\r\n    }\r\n    return \"Error in computing the sum of the score.\"\r\n  }\r\n\r\n  function handleScoreBreakdown(testType) {    \r\n    if (testType === \"psat\") {\r\n        return `Math: ${psat.math}; Reading and Writing: ${psat.readingWriting}`\r\n      } else if (testType === \"sat\") {\r\n        return `Math: ${sat.math}; Reading and Writing: ${sat.verbal}; Essay: ${sat.essay}`\r\n      } else if (testType === \"act\") {\r\n        return `STEM: ${act.stem}; ELA: ${act.ela}`\r\n      } \r\n      return \"Error in computing score breakdown.\"\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\">\r\n        Test Scores\r\n      </Typography>\r\n        <List >\r\n            <Test testType={`PSAT: ${handleSumScores('psat')}`} testScores={handleScoreBreakdown('psat')} />\r\n        </List>\r\n      <Divider />\r\n        <List>\r\n          <Test testType={`SAT: ${handleSumScores('sat')}`} testScores={handleScoreBreakdown('sat')} />\r\n        </List>\r\n      <Divider />\r\n        <List >\r\n            <Test testType={`ACT: ${handleSumScores('act')}`} testScores={handleScoreBreakdown('act')} />\r\n        </List>\r\n      <Divider />\r\n        <APTest aps={aps} />\r\n      <Divider />\r\n        <SubjectTest satSubjectTests={satSubjectTests} />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n// OPTIONAL: pull data from \"https://api.data.gov/ed/collegescorecard/v1/\")\r\n\r\nexport default function CollegeListContainer({ collegeList }) {\r\n  return (\r\n  <>\r\n    <Typography variant=\"h6\">\r\n      College List\r\n    </Typography>\r\n    <TableContainer>\r\n      <Table size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>College</TableCell>\r\n            <TableCell align=\"center\">Category</TableCell>\r\n            <TableCell align=\"center\">Acceptance Rate</TableCell>\r\n            <TableCell align=\"center\">Application Cycle</TableCell>\r\n            <TableCell align=\"center\">Middle 50% SAT</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {collegeList.map((college) => ( \r\n            <TableRow key={college.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {college.collegeName}\r\n              </TableCell>\r\n              <TableCell align=\"center\">todo: collegescorecard API</TableCell>\r\n              <TableCell align=\"center\">todo: collegescorecard API</TableCell>\r\n              <TableCell align=\"center\">{college.cycle}</TableCell>\r\n              <TableCell align=\"center\">todo: collegescorecard API</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  </>\r\n  );\r\n}","import React from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\n\r\n// context\r\nimport { useStudent } from '../../context/StudentContext' \r\n\r\n// components\r\nimport TestContainer from './test/TestContainer'\r\nimport Calendar from 'react-calendar'\r\nimport CollegeList from './CollegeList'\r\n\r\n// material ui\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Card from \"@material-ui/core/Card\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { Button, CardContent } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\nexport default function StudentContainer() {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const {\r\n    handleStudentSelect,\r\n    findStudent,\r\n    handleDeleteStudent\r\n  } = useStudent()\r\n\r\n  const { studentId } = useParams()\r\n\r\n  const student = findStudent(studentId) \r\n\r\n  function handleEditButton(id) {\r\n    handleStudentSelect(id)\r\n    history.push(`/student-roster/students/edit/${id}`)\r\n  }\r\n\r\n  function handleDelete(id) {\r\n    handleDeleteStudent(id)\r\n    history.push(`/student-roster/`)\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={3} justify=\"space-between\">\r\n        <Grid item xs={2}>\r\n            <Typography variant=\"h5\">\r\n                {`${student.firstName} ${student.lastName}`}\r\n            </Typography>\r\n        </Grid>\r\n        <Grid item xs={5} />\r\n        <Grid item xs={5}>\r\n          <Grid container justify=\"flex-end\">\r\n          <Button \r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            startIcon={<EditIcon />}\r\n            onClick={() => handleEditButton(student.id)} // TODO\r\n          >\r\n            Edit Student\r\n          </Button>\r\n            <Button \r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"small\" \r\n              onClick={() => handleDelete(student.id)}\r\n              startIcon={<DeleteIcon />} \r\n            >\r\n              Delete Student\r\n            </Button>\r\n            </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Card>\r\n            <CardContent>\r\n                <TestContainer student={student} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">\r\n                Calendar (todo: add scheduling)\r\n              </Typography>\r\n                <Calendar />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <CollegeList collegeList={student.collegeList} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(2),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    button: {\r\n      marginRight: theme.spacing(2)\r\n    }\r\n  }));","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function EditStudentAddSectionTitle({ title, size }) {\r\n    return (\r\n        <Typography variant={size}>\r\n            {title}\r\n        </Typography>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function BasicInfo({ register, errors, student }) {\r\n    return (\r\n    <>\r\n        <TextField \r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            defaultValue={student.firstName}\r\n            inputRef={register({ required: \"Required\" })}\r\n            error={errors.firstName ? true : false}\r\n            helperText={errors.firstName && errors.firstName.message}\r\n        />\r\n        <TextField \r\n            label=\"Last Name\"\r\n            name=\"lastName\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            defaultValue={student.lastName}\r\n            inputRef={register({ required: \"Required\" })}\r\n            error={errors.lastName ? true : false}\r\n            helperText={errors.lastName && errors.lastName.message}\r\n        />\r\n        <TextField \r\n            label=\"Email\"\r\n            name=\"email\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            defaultValue={student.email}\r\n            inputRef={register({\r\n                required: \"required\",\r\n                pattern: {\r\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                    message: \"Entered value does not match email format\"\r\n                }\r\n            })}\r\n            error={errors.email ? true : false}\r\n            helperText={errors.email && errors.email.message}\r\n        />  \r\n        <TextField \r\n            label=\"High School\"\r\n            name=\"highSchool\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            defaultValue={student.highSchool}\r\n            inputRef={register({ required: \"Required\" })}\r\n            error={errors.highSchool ? true : false}\r\n            helperText={errors.highSchool && errors.highSchool.message}\r\n        />  \r\n        <TextField \r\n            label=\"Grade\"\r\n            name=\"grade\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            defaultValue={student.grade}\r\n            inputRef={register({ \r\n                required: \"Required\",\r\n                max: {\r\n                    value: 14,\r\n                    message: \"Grade must be less than 14.\"\r\n                },\r\n                min: {\r\n                    value: 1,\r\n                    message: \"Grade must be greater than 0.\"\r\n                }\r\n            })}\r\n            error={errors.grade ? true : false}\r\n            helperText={errors.grade && errors.grade.message}\r\n        />  \r\n        <TextField \r\n            label=\"Prospective Major\"\r\n            name=\"major\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            defaultValue={student.major}\r\n            inputRef={register({ required: \"Required\" })}\r\n            error={errors.major ? true : false}\r\n            helperText={errors.major && errors.major.message}\r\n        /> \r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport EditStudentSectionTitle from '../EditStudentSectionTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport default function PsatAdd({ register, errors, psat }) {\r\n    return (\r\n        <>\r\n            <EditStudentSectionTitle title=\"PSAT\" size=\"h6\"/>\r\n                <TextField \r\n                    label=\"Math\"\r\n                    name=\"psat.math\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    defaultValue={psat.math}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 760,\r\n                            message: \"Score must be 760 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 160,\r\n                            message: \"Score cannot be less than 160.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.psat && errors.psat.math) ? true : false}\r\n                    helperText={(errors.psat && errors.psat.math) && errors.psat.math.message}\r\n                /> \r\n                <TextField \r\n                    label=\"Reading & Writing\"\r\n                    name=\"psat.readingWriting\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    defaultValue={psat.readingWriting}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 760,\r\n                            message: \"Score must be 760 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 160,\r\n                            message: \"Score cannot be less than 160.\"                        \r\n                        }\r\n                    })}\r\n                    error={(errors.psat && errors.psat.readingWriting) ? true : false}\r\n                    helperText={(errors.psat && errors.psat.readingWriting) && errors.psat.readingWriting.message}\r\n                />  \r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport EditStudentSectionTitle from '../EditStudentSectionTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport default function SatAdd({ register, errors, sat }) {\r\n    return (\r\n        <>\r\n            <EditStudentSectionTitle title=\"SAT\" size=\"h6\"/>\r\n                <TextField \r\n                    label=\"Math\"\r\n                    variant=\"outlined\"\r\n                    name=\"sat.math\"\r\n                    type=\"number\"\r\n                    defaultValue={sat.math}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 800,\r\n                            message: \"Score must be 800 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 200,\r\n                            message: \"Score cannot be less than 200.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.sat && errors.sat.math) ? true : false}\r\n                    helperText={(errors.sat && errors.sat.math) && errors.sat.math.message}\r\n                /> \r\n                <TextField \r\n                    label=\"Verbal\"\r\n                    variant=\"outlined\"\r\n                    name=\"sat.verbal\"\r\n                    type=\"number\"\r\n                    defaultValue={sat.verbal}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 800,\r\n                            message: \"Score must be 800 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 200,\r\n                            message: \"Score cannot be less than 200.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.sat && errors.sat.verbal) ? true : false}\r\n                    helperText={(errors.sat && errors.sat.verbal) && errors.sat.verbal.message}\r\n                />  \r\n                <TextField \r\n                    label=\"Essay\"\r\n                    variant=\"outlined\"\r\n                    name=\"sat.essay\"\r\n                    type=\"number\"\r\n                    defaultValue={sat.essay}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 8,\r\n                            message: \"Score must be 8 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.sat && errors.sat.essay) ? true : false}\r\n                    helperText={(errors.sat && errors.sat.essay) && errors.sat.essay.message}\r\n                />  \r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport EditStudentSectionTitle from '../EditStudentSectionTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport default function SatAdd({ register, errors, act }) {\r\n    return (\r\n        <>\r\n            <EditStudentSectionTitle title=\"ACT\" size=\"h6\"/>\r\n                <TextField \r\n                    label=\"STEM\"\r\n                    variant=\"outlined\"\r\n                    name=\"act.stem\"\r\n                    type=\"number\"\r\n                    defaultValue={act.stem}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 36,\r\n                            message: \"Score must be 36 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.act && errors.act.stem) ? true : false}\r\n                    helperText={(errors.act && errors.act.stem) && errors.act.stem.message}\r\n                /> \r\n                <TextField \r\n                    label=\"ELA\"\r\n                    variant=\"outlined\"\r\n                    name=\"act.ela\"\r\n                    type=\"number\"\r\n                    defaultValue={act.ela}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 36,\r\n                            message: \"Score must be 36 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.act && errors.act.ela) ? true : false}\r\n                    helperText={(errors.act && errors.act.ela) && errors.act.ela.message}\r\n                />   \r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { useFieldArray} from \"react-hook-form\"\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport EditStudentSectionTitle from '../EditStudentSectionTitle'\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\n\r\nexport default function SubjectTestEdit({ control, register, errors }) {\r\n    const classes = useStyles();\r\n    const { fields, remove, append } = useFieldArray(\r\n        {\r\n          control,\r\n          name: \"satSubjectTests\",\r\n          keyName: 'react-hook-id' // deafult and you can rename to others\r\n        }\r\n    );\r\n\r\n    return (\r\n    <>\r\n        <EditStudentSectionTitle title=\"SAT Subject Tests\" size=\"h6\" />\r\n        {fields.map((field, index) => {\r\n          return (\r\n            <div key={index} className={classes.container}>\r\n                <TextField \r\n                    label=\"Test Type\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name={`satSubjectTests[${index}].type`}\r\n                    defaultValue={`${field.type}`}\r\n                    inputRef={register()}\r\n                />\r\n                <TextField \r\n                    label=\"Test Score\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name={`satSubjectTests[${index}].score`}\r\n                    defaultValue={`${field.score}`}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 800,\r\n                            message: \"Score must be 800 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.satSubjectTests && errors.satSubjectTests[index]) ? true : false}\r\n                    helperText={\r\n                        (errors.satSubjectTests && errors.satSubjectTests[index]) \r\n                        && errors.satSubjectTests[`${index}`].score.message\r\n                    }\r\n                />\r\n\r\n                {/* hidden input to register the id */}\r\n                <input type=\"hidden\" key={field.id} name={`satSubjectTests[${index}].id`} ref={register()} defaultValue={`${field.id}`} />\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    startIcon={<RemoveCircleOutlineIcon />}\r\n                    onClick={() => remove(index)}\r\n                >\r\n                    Remove Subject Test\r\n                </Button> \r\n            </div>\r\n          );\r\n        })} \r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            className={classes.button}\r\n            startIcon={<AddCircleIcon />}\r\n            onClick={() => append({ id: uuidv4(), type: \"\", score: 0 })}\r\n        >\r\n            Add Subject Test\r\n        </Button> \r\n    </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        },\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        height: '35px',\r\n    }\r\n  }));\r\n\r\n","import React from 'react'\r\nimport { useFieldArray} from \"react-hook-form\"\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport EditStudentSectionTitle from '../EditStudentSectionTitle'\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\n\r\nexport default function ApEdit({ control, register, errors }) {\r\n    const classes = useStyles();\r\n    const { fields, remove, append } = useFieldArray(\r\n        {\r\n          control,\r\n          name: \"aps\",\r\n          keyName: 'react-hook-id' // deafult and you can rename to others\r\n        }\r\n    );\r\n\r\n    return (\r\n    <>\r\n        <EditStudentSectionTitle title=\"AP Exams\" size=\"h6\" />\r\n        {fields.map((field, index) => {\r\n          return (\r\n            <div key={index} className={classes.container}>\r\n                <TextField \r\n                    label=\"Test Type\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name={`aps[${index}].type`}\r\n                    defaultValue={`${field.type}`}\r\n                    inputRef={register()}\r\n                />\r\n                <TextField \r\n                    label=\"Test Score\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name={`aps[${index}].score`}\r\n                    defaultValue={`${field.score}`}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 5,\r\n                            message: \"Score must be 5 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.aps && errors.aps[index]) ? true : false}\r\n                    helperText={\r\n                        (errors.aps && errors.aps[index]) \r\n                        && errors.aps[`${index}`].score.message\r\n                    }\r\n                />\r\n\r\n                {/* hidden input to register the id */}\r\n                <input type=\"hidden\" key={field.id} name={`aps[${index}].id`} ref={register()} defaultValue={`${field.id}`} />\r\n                \r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    startIcon={<RemoveCircleOutlineIcon />}\r\n                    onClick={() => remove(index)}\r\n                >\r\n                    Remove AP Exam\r\n                </Button> \r\n            </div>\r\n          );\r\n        })} \r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            className={classes.button}\r\n            startIcon={<AddCircleIcon />}\r\n            onClick={() => append({ id: uuidv4(), type: \"\", score: 0 })}\r\n        >\r\n            Add AP Exam\r\n        </Button> \r\n    </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        },\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        height: '35px',\r\n    }\r\n  }));\r\n\r\n","import React from 'react'\r\n// import { useStudent } from '../../../../context/StudentContext';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n// components\r\nimport PsatEdit from './individualTestEdit/PsatEdit'\r\nimport SatEdit from './individualTestEdit/SatEdit'\r\nimport ActEdit from './individualTestEdit/ActEdit'\r\nimport SubjectTestEditNew from './individualTestEdit/SubjectTestEdit'\r\nimport APEdit from './individualTestEdit/ApEdit'\r\n\r\nexport default function TestScoresEdit({ register, errors, student, control }) {\r\n    return (\r\n        <> \r\n        <Box mb={3} mt={2}>\r\n            <PsatEdit register={register} errors={errors} psat={student.psat} />\r\n        </Box>\r\n        <Divider variant=\"middle\" />\r\n        <Box mb={3} mt={2}>\r\n            <SatEdit register={register} errors={errors} sat={student.sat} />\r\n        </Box>\r\n        <Divider variant=\"middle\" />\r\n        <Box mb={3} mt={2}>\r\n            <ActEdit register={register} errors={errors} act={student.act} /> \r\n        </Box>\r\n        <Divider variant=\"middle\" />\r\n        <Box mb={3} mt={2}>\r\n            <SubjectTestEditNew \r\n                register={register} \r\n                errors={errors} \r\n                control={control}\r\n            />\r\n        </Box>\r\n        <Divider variant=\"middle\" />\r\n        <Box mb={3} mt={2}>\r\n            <APEdit \r\n                register={register} \r\n                errors={errors} \r\n                control={control}\r\n            />\r\n        </Box>\r\n        </>\r\n    )\r\n}\r\n\r\n","import FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Controller } from \"react-hook-form\";\r\n\r\nconst ReactHookFormSelect = ({\r\n  name,\r\n  label,\r\n  control,\r\n  defaultValue,\r\n  children,\r\n  formClassName,\r\n  ...props\r\n}) => {\r\n  const labelId = `${name}-label`;\r\n  const classes = useStyles();\r\n  return (\r\n    <FormControl {...props} variant=\"outlined\" className={classes.formControl}>\r\n      <InputLabel id={labelId}>{label}</InputLabel>\r\n      <Controller\r\n        as={\r\n          <Select labelId={labelId} label={label}>\r\n            {children}\r\n          </Select>\r\n        }\r\n        name={name}\r\n        control={control}\r\n        defaultValue={defaultValue}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\nexport default ReactHookFormSelect;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 180,\r\n    },\r\n  }));","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { useFieldArray} from \"react-hook-form\"\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ReactHookFormSelect from './ReactHookFormSelect'\r\n\r\n\r\nexport default function CollegeListEdit({ control, register }) {\r\n    const classes = useStyles();\r\n    const { fields, remove, append } = useFieldArray(\r\n        {\r\n          control,\r\n          name: \"collegeList\",\r\n          keyName: 'react-hook-id' // deafult and you can rename to others\r\n        }\r\n    );\r\n\r\n    return (\r\n    <>\r\n        {fields.map((field, index) =>\r\n            <div key={index} className={classes.container}>\r\n                <TextField \r\n                    label='College'\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name={`collegeList[${index}].collegeName`}\r\n                    defaultValue={`${field.collegeName}`}\r\n                    inputRef={register()}\r\n                />\r\n\r\n                <ReactHookFormSelect\r\n                    name={`collegeList[${index}].cycle`}\r\n                    label=\"Cycle\"\r\n                    defaultValue={`${field.cycle}`}\r\n                    control={control}\r\n                >\r\n                {collegeCycles.map((cycle) => (\r\n                        <MenuItem key={cycle} value={cycle}>\r\n                                {cycle}\r\n                        </MenuItem>\r\n                    ))}\r\n                </ReactHookFormSelect>\r\n\r\n                {/* hidden input to register the id */}\r\n                <input \r\n                    type=\"hidden\" \r\n                    key={field.id} \r\n                    name={`collegeList[${index}].id`} \r\n                    ref={register()} \r\n                    defaultValue={`${field.id}`} \r\n                />\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    startIcon={<RemoveCircleOutlineIcon />}\r\n                    onClick={() => remove(index)}\r\n                >\r\n                    Remove College\r\n                </Button>\r\n            </div>\r\n        )}\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            className={classes.button}\r\n            startIcon={<AddCircleIcon />}\r\n            onClick={() => append({ id: uuidv4(), collegeName: \"\", cycle: \"\" })}\r\n        >\r\n            Add College\r\n        </Button> \r\n    </>\r\n    )\r\n}\r\n\r\nconst collegeCycles = ['Early Action', 'Early Decision', 'Regular Decision']\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        },\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        height: '35px',\r\n    }\r\n  }));\r\n","import React from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useStudent } from '../../../context/StudentContext'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\n\r\n// material ui \r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Button from '@material-ui/core/Button'\r\n\r\n// components\r\nimport EditStudentSectionTitle from './EditStudentSectionTitle'\r\nimport BasicInfo from './BasicInfo'\r\nimport TestScoresEdit from './TestScoresEdit'\r\nimport CollegeListEdit from './CollegeListEdit'\r\n\r\nexport default function EditStudentContainer() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const {\r\n        handleStudentChange,\r\n        findStudent\r\n      } = useStudent()\r\n    const { studentId } = useParams()\r\n    const student = findStudent(studentId) \r\n    const { register, control, handleSubmit, errors } = useForm({\r\n        defaultValues: {\r\n          sat: student.sat,\r\n          aps: student.aps,\r\n          collegeList: student.collegeList\r\n        }\r\n      });\r\n\r\n    const onSubmit = data => {\r\n        handleStudentChange(student.id, { ...student, ...data })\r\n        history.push(`/student-roster/students/view/${student.id}`)\r\n    }\r\n\r\n    return (\r\n    <form className={classes.root} onSubmit={handleSubmit(onSubmit)}>\r\n        <Box mb={3} mt={2}>\r\n            <EditStudentSectionTitle title=\"Basic Information\" size=\"h5\" />\r\n            <BasicInfo register={register} errors={errors} student={student} />\r\n        </Box>\r\n        <Divider />\r\n        <Box mb={3} mt={2}>\r\n            <EditStudentSectionTitle title=\"Test Scores\" size=\"h5\" />\r\n            <TestScoresEdit register={register} errors={errors} student={student} control={control} />\r\n        </Box>\r\n        <Divider />\r\n        <Box mb={3} mt={2}>\r\n            <EditStudentSectionTitle title=\"College List \" size=\"h5\" />\r\n            <CollegeListEdit register={register} errors={errors} control={control} />\r\n       </Box>\r\n        <Box mb={3} mt={2}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                type=\"submit\"            \r\n            >\r\n                Submit\r\n            </Button>\r\n        </Box>\r\n    </form>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(2),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }));\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\n\r\n// components\r\nimport StudentOverviewOverviewContainer from './studentOverview/StudentOverviewContainer'\r\nimport AddStudentContainer from './addStudent/AddStudentContainer'\r\nimport StudentSingleContainer from './studentSingle/StudentSingleContainer'\r\nimport EditStudentContainer from './studentSingle/editStudent/EditStudentContainer'\r\n\r\nexport default function Routes() {\r\n    return (\r\n    <>\r\n      <Route exact path=\"/student-roster\" component={StudentOverviewOverviewContainer} />\r\n      <Route path=\"/student-roster/new\" component={AddStudentContainer} />\r\n      <Route exact path=\"/student-roster/students/view/:studentId\" component={StudentSingleContainer} />\r\n      <Route exact path=\"/student-roster/students/edit/:studentId\" component={EditStudentContainer} />\r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Switch, BrowserRouter as Router } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\n// context\r\nimport { StudentProvider } from '../context/StudentContext'\r\n\r\n// components\r\n// import MenuBar from './menubar/MenuBar'\r\nimport Routes from './Routes'\r\n\r\nexport default function Main() {\r\n    const appBarHeight = 50 // customized height of MenuBar\r\n    const classes = useStyles()    \r\n\r\n    return (\r\n        <StudentProvider>\r\n            <Router>\r\n                <div className={classes.root}>\r\n                    {/* <MenuBar appBarHeight={appBarHeight} /> */}\r\n                    <main className={classes.content}>\r\n                    <div style={{ \"height\": appBarHeight + 'px' }} />\r\n                        <Switch>\r\n                            <Routes />\r\n                        </Switch>\r\n                    </main>\r\n                </div>\r\n            </Router>\r\n        </StudentProvider>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex'\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        width: \"100%\",\r\n        margin: theme.spacing(3),\r\n    }\r\n}))","import Main from './components/Main'\n\nfunction App() {\n  return (\n    <>\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
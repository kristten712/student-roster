{"version":3,"sources":["context/TestData.js","context/NewStudentObj.js","context/StudentContext.js","components/menubar/MenuBar.js","components/studentOverview/StudentTableRow.js","components/studentOverview/StudentTable.js","components/studentOverview/StudentOverviewContainer.js","components/addStudent/AddStudentSectionTitle.js","components/addStudent/AddBasicInfo.js","components/addStudent/individualTestAdd/PsatAdd.js","components/addStudent/individualTestAdd/SatAdd.js","components/addStudent/individualTestAdd/ActAdd.js","components/addStudent/individualTestAdd/SubjectTestAdd.js","components/addStudent/individualTestAdd/ApAdd.js","components/addStudent/TestScoresAdd.js","components/addStudent/ReactHookFormSelect.js","components/addStudent/CollegeListAdd.js","components/addStudent/AddStudentContainer.js","components/studentSingle/test/Test.js","components/studentSingle/test/APTest.js","components/studentSingle/test/SubjectTest.js","components/studentSingle/test/TestContainer.js","components/studentSingle/CollegeList.js","components/studentSingle/StudentSingleContainer.js","components/studentSingle/editStudent/EditStudentSectionTitle.js","components/studentSingle/editStudent/BasicInfo.js","components/studentSingle/editStudent/individualTestEdit/PsatEdit.js","components/studentSingle/editStudent/individualTestEdit/SatEdit.js","components/studentSingle/editStudent/individualTestEdit/ActEdit.js","components/studentSingle/editStudent/individualTestEdit/SubjectTestEdit.js","components/studentSingle/editStudent/individualTestEdit/ApEdit.js","components/studentSingle/editStudent/TestScoresEdit.js","components/studentSingle/editStudent/ReactHookFormSelect.js","components/studentSingle/editStudent/CollegeListEdit.js","components/studentSingle/editStudent/EditStudentContainer.js","components/Routes.js","components/Main.js","App.js","index.js"],"names":["sampleStudents","id","firstName","lastName","email","highSchool","grade","major","early","progress","collegeList","collegeName","cycle","payment","amountDue","amountPaid","expectedRevenue","psat","readingWriting","math","sat","verbal","essay","act","stem","ela","aps","type","score","satSubjectTests","newStudentObj","uuidv4","StudentContext","React","createContext","useStudent","useContext","StudentProvider","children","useState","students","setStudents","selectedStudentId","setSelectedStudentId","newStudent","setNewStudent","selectedStudent","find","student","value","handleStudentSelect","handleStudentAdd","handleStudentChange","newStudents","index","findIndex","r","findStudent","handleResetNewStudent","handleAppendNewStudent","studentToAdd","push","handleDeleteStudent","filter","replaceStudents","localStudents","Provider","MenuBar","appBarHeight","classes","useStyles","history","useHistory","AppBar","position","className","appbar","style","Toolbar","Box","display","flexGrow","menuListItems","map","item","List","component","ListItem","button","onClick","path","ListItemText","primary","name","listItemText","IconButton","url","github","window","open","focus","icon","makeStyles","theme","background","fade","justifyContent","color","StudentTableRow","TableRow","handleSelectedStudent","tr","TableCell","align","cursor","StudentTable","TableContainer","Paper","Table","aria-label","TableHead","TableBody","StudentsContainer","Button","variant","size","startIcon","Typography","marginBottom","spacing","marginRight","AddtudentAddSectionTitle","title","BasicInfo","register","errors","TextField","label","defaultValue","inputRef","required","error","helperText","message","pattern","max","min","PsatAdd","valueAsNumber","SatAdd","SubjectTestAdd","control","useFieldArray","keyName","fields","remove","append","field","container","ref","root","margin","width","alignItems","height","ApAdd","TestScoresAdd","mb","mt","Divider","ReactHookFormSelect","props","formClassName","labelId","FormControl","formControl","InputLabel","as","Select","minWidth","CollegeListAdd","collegeCycles","MenuItem","AddStudentContainer","useForm","defaultValues","handleSubmit","onSubmit","data","fontSize","padding","Test","testType","secondary","APTest","ap","SubjectTest","test","StudentTestScores","handleSumScores","handleScoreBreakdown","testScores","CollegeListContainer","college","scope","StudentContainer","useParams","studentId","Grid","justify","xs","sm","Card","CardContent","EditStudentAddSectionTitle","SubjectTestEdit","ApEdit","TestScoresEdit","CollegeListEdit","EditStudentContainer","Routes","exact","StudentOverviewOverviewContainer","StudentSingleContainer","Main","content","appBarSpacer","mixins","toolbar","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28f3be9a.chunk.js","sourcesContent":["export const sampleStudents = [\r\n    {\r\n      id: \"1\", \r\n      firstName: 'Harry',\r\n      lastName: 'Potter',\r\n      email: 'hpotter@gmail.com',\r\n      highSchool: 'Hogwarts High School',\r\n      grade: 12,\r\n      major: 'Neuroscience',\r\n      early: true,\r\n      progress: 'Started',\r\n      collegeList: [\r\n        {\r\n          id: 1,\r\n          collegeName: 'Harvard',\r\n          cycle: 'Regular Decision'\r\n        },\r\n        {\r\n          id: 2,\r\n          collegeName: 'Brown',\r\n          cycle: 'Early Action'\r\n        }\r\n      ],\r\n      payment: {\r\n        amountDue: 100,\r\n        amountPaid: 200,\r\n        expectedRevenue: 300\r\n      },\r\n      psat: {\r\n        readingWriting: 520,\r\n        math: 510\r\n      },\r\n    sat: {\r\n      math: 800,\r\n      verbal: 800,\r\n      essay: 8\r\n    },\r\n    act: {\r\n      stem: 19,\r\n      ela: 24\r\n    },\r\n    aps: [\r\n      {\r\n        id: 1234231,\r\n        type: 'AP Physics',\r\n        score: 4  \r\n      },\r\n      {\r\n        id: 2432423,\r\n        type: 'AP Biology',\r\n        score: 5  \r\n      }\r\n    ],\r\n    satSubjectTests: [\r\n      {\r\n        id: 1, \r\n        type: 'Math Level II',\r\n        score: 800  \r\n      },\r\n      {\r\n        id: 2, \r\n        type: 'Biology M',\r\n        score: 750  \r\n      }\r\n    ]\r\n    },\r\n    {\r\n      id: \"2\", \r\n      firstName: 'Hermione',\r\n      lastName: 'Granger',\r\n      email: 'hgranger@gmail.com',\r\n      highSchool: 'Hogwarts High School',\r\n      grade: 12,\r\n      major: 'Mathematics',\r\n      early: true,\r\n      progress: 'Started',\r\n      collegeList: [\r\n        {\r\n          id: 1,\r\n          collegeName: 'UC Berkeley',\r\n          cycle: 'Regular Decision'\r\n        },\r\n        {\r\n          id: 2,\r\n          collegeName: 'Harvard',\r\n          cycle: 'Early Action'\r\n        }\r\n      ],\r\n      payment: {\r\n        amountDue: 50,\r\n        amountPaid: 100,\r\n        expectedRevenue: 150\r\n      },\r\n      psat: {\r\n        readingWriting: 520,\r\n        math: 510\r\n      },\r\n      sat: {\r\n        math: 750,\r\n        verbal: 750,\r\n        essay: 8\r\n      },\r\n      act: {\r\n        stem: 30,\r\n        ela: 30\r\n      },\r\n      aps: [\r\n        {\r\n          id: 4324321,\r\n          type: 'AP Latin',\r\n          score: 5  \r\n        },\r\n        {\r\n          id: 2243232,\r\n          type: 'AP Chemistry',\r\n          score: 5  \r\n        }\r\n      ],\r\n      satSubjectTests: [\r\n        {\r\n          id: 1,  \r\n          type: 'Math Level II',\r\n          score: 800  \r\n        },\r\n        {\r\n          id: 2, \r\n          type: 'US History',\r\n          score: 750  \r\n        }\r\n      ] \r\n    }\r\n  ]\r\n  \r\n// export const sampleScores = [ \r\n//     {\r\n//       id: 1,\r\n//       psat: {\r\n//           readingWriting: 520,\r\n//           math: 510\r\n//         },\r\n//       sat: {\r\n//         math: 800,\r\n//         verbal: 800,\r\n//         essay: 10\r\n//       },\r\n//       act: {\r\n//         stem: 19,\r\n//         ela: 24\r\n//       },\r\n//       aps: [\r\n//         {\r\n//           id: 1,\r\n//           type: 'AP Physics',\r\n//           score: 4  \r\n//         },\r\n//         {\r\n//           id: 2,\r\n//           type: 'AP Biology',\r\n//           score: 5  \r\n//         }\r\n//       ],\r\n//       satSubjectTests: [\r\n//         {\r\n//           id: 1,\r\n//           type: 'Math Level II',\r\n//           score: 800  \r\n//         },\r\n//         {\r\n//           id: 2,\r\n//           type: 'Biology M',\r\n//           score: 750  \r\n//         }\r\n//       ]    \r\n//     },\r\n//     {\r\n//       id: 2,\r\n//       psat: {\r\n//         readingWriting: 520,\r\n//         math: 510\r\n//       },\r\n//       sat: {\r\n//         math: 750,\r\n//         verbal: 750,\r\n//         essay: 10\r\n//       },\r\n//       act: {\r\n//         stem: 30,\r\n//         ela: 30\r\n//       },\r\n//       aps: [\r\n//         {\r\n//           id: 1,\r\n//           type: 'AP Latin',\r\n//           score: 5  \r\n//         },\r\n//         {\r\n//           id: 2,\r\n//           type: 'AP Chemistry',\r\n//           score: 5  \r\n//         }\r\n//       ],\r\n//       satSubjectTests: [\r\n//         {\r\n//           id: 1,\r\n//           type: 'Math Level II',\r\n//           score: 800  \r\n//         },\r\n//         {\r\n//           id:2,\r\n//           type: 'US History',\r\n//           score: 750  \r\n//         }\r\n//       ]    \r\n//     }\r\n//   ]\r\n  ","import { v4 as uuidv4 } from 'uuid'\r\n\r\nexport const newStudentObj = {\r\n  id: uuidv4(),\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  highSchool: '',\r\n  grade: 0,\r\n  major: '',\r\n  early: true,\r\n  progress: 'Started',\r\n  collegeList: [\r\n  {\r\n      id: uuidv4(),\r\n      collegeName: '',\r\n      cycle: ''\r\n  }\r\n  ],\r\n  payment: {\r\n      amountDue: 0,\r\n      amountPaid: 0,\r\n      expectedRevenue: 0\r\n  },\r\n  psat: {\r\n    readingWriting: 0,\r\n    math: 0\r\n  },\r\n  sat: {\r\n    math: 0,\r\n    verbal: 0,\r\n    essay: 0\r\n  },\r\n  act: {\r\n    stem: 0,\r\n    ela: 0\r\n  },\r\n  aps: [\r\n    {\r\n      id: uuidv4(),\r\n      type: '',\r\n      score: 0  \r\n    }\r\n  ],\r\n  satSubjectTests: [\r\n    {\r\n      id: uuidv4(),\r\n      type: '',\r\n      score: 0  \r\n    }\r\n  ]  \r\n}","import React, { useContext, useState } from 'react'\r\nimport { sampleStudents } from './TestData'\r\nimport { newStudentObj } from './NewStudentObj'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nconst StudentContext = React.createContext()\r\n\r\nexport function useStudent() {\r\n    return useContext(StudentContext)\r\n}\r\n\r\nexport function StudentProvider({ children }) {\r\n  const [students, setStudents] = useState(sampleStudents)\r\n  const [selectedStudentId, setSelectedStudentId] = useState()\r\n  const [newStudent, setNewStudent] = useState(newStudentObj)\r\n  const selectedStudent = students.find(student => student.id === selectedStudentId)\r\n\r\n  function handleStudentSelect(id) {\r\n    setSelectedStudentId(id)\r\n  }\r\n\r\n  function findStudent(id) {\r\n    return students.find(student => student.id === id)\r\n  }\r\n\r\n  function handleStudentAdd() {\r\n      setStudents([...students, newStudent])\r\n  }\r\n\r\n  function handleStudentChange(id, student) {\r\n      const newStudents = [...students]\r\n      const index = newStudents.findIndex(r => r.id === id)\r\n      newStudents[index] = student\r\n      setStudents(newStudents)\r\n  }\r\n\r\n  function handleResetNewStudent() {\r\n    setNewStudent({...newStudentObj, ...{id: uuidv4()}})\r\n  }\r\n\r\n  function handleAppendNewStudent(studentToAdd) {\r\n    const newStudents = students\r\n    newStudents.push(studentToAdd)\r\n    setStudents(newStudents)\r\n  }\r\n\r\n  function handleDeleteStudent(id) {\r\n    let newStudents = [...students]\r\n    newStudents = newStudents.filter(student => student.id !== id)\r\n    setStudents(newStudents)\r\n  }\r\n\r\n  function replaceStudents(localStudents) {\r\n    setStudents(localStudents)\r\n  }\r\n\r\n  const value = {\r\n      students,\r\n      selectedStudent,\r\n      newStudent,\r\n      handleStudentSelect,\r\n      handleStudentAdd,\r\n      handleStudentChange,\r\n      findStudent,\r\n      handleResetNewStudent,\r\n      handleAppendNewStudent,\r\n      handleDeleteStudent,\r\n      replaceStudents\r\n  }\r\n\r\n  return (\r\n      <StudentContext.Provider value={value}>\r\n          {children}\r\n      </StudentContext.Provider>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport { fade } from '@material-ui/core/styles/colorManipulator'\r\nimport Box from '@material-ui/core/Box'\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\n// icons\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\n\r\nexport default function MenuBar({ appBarHeight }) {\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n\r\n    function handleGoToPage(path) {\r\n        history.push(path)\r\n    }\r\n\r\n    function handleRedirect(url) {\r\n        var win = window.open(url, '_blank')\r\n        win.focus()\r\n    }\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" className={classes.appbar} style={{ \"height\": appBarHeight + 'px' }}>\r\n            <Toolbar>\r\n            <Box display='flex' flexGrow={1}>\r\n                {menuListItems.map((item, index) => (\r\n                    <List key={index} component=\"nav\">\r\n                        <ListItem button onClick={() => handleGoToPage(item.path)}>\r\n                            <ListItemText primary={item.name} className={classes.listItemText} />\r\n                        </ListItem>\r\n                    </List>\r\n                ))}\r\n                </Box>            \r\n                    <IconButton onClick={() => handleRedirect(github.url)}>\r\n                        {github.icon}\r\n                    </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appbar: {\r\n        background: fade(\"#abdbe3\", 0.9),\r\n        justifyContent: 'center',\r\n    },\r\n    listItemText : {\r\n        color: 'black'\r\n    }\r\n}));\r\n\r\nconst github = {\r\n        url: 'https://github.com/kristten712/',\r\n        icon: <GitHubIcon />,\r\n}\r\n\r\nconst menuListItems = [\r\n    {\r\n        name: 'Student Overview',\r\n        path: '/' \r\n    }, \r\n    {\r\n        name: 'Add New Student',\r\n        path: 'new'\r\n    }\r\n]","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from 'react-router-dom'\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\nimport TableCell from \"@material-ui/core/TableCell\"\r\n\r\n// context\r\nimport { useStudent } from '../../context/StudentContext' \r\n\r\nexport default function StudentTableRow() {\r\n  const classes = useStyles()\r\n  const history = useHistory()  \r\n  const {\r\n      students,\r\n      handleStudentSelect\r\n  } = useStudent()\r\n\r\n  function handleSelectedStudent(student) {\r\n    handleStudentSelect(student.id)\r\n    history.push(`/students/view/${student.id}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {students.map((student) => (\r\n          <TableRow key={student.id} onClick={ () => handleSelectedStudent(student)} className={classes.tr}>\r\n            <TableCell>\r\n                    {student.firstName + ' ' + student.lastName}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{student.highSchool}</TableCell>\r\n                <TableCell align=\"center\">{student.major}</TableCell>\r\n                <TableCell align=\"center\">{student.sat.math + student.sat.verbal}</TableCell>\r\n                <TableCell align=\"center\">{student.early ? 'Yes' : 'No'}</TableCell>\r\n                <TableCell align=\"center\">{student.progress}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tr: {\r\n      '&:hover': {\r\n        background: \"aliceblue\",\r\n        cursor: \"pointer\"\r\n     },\r\n    },\r\n}));\r\n  ","import React from 'react';\r\n\r\n// Material Table\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n// components\r\nimport StudentTableRow from './StudentTableRow'\r\n\r\nexport default function StudentTable() {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className=\"student-table\" aria-label=\"student table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell align=\"center\">High School</TableCell>\r\n            <TableCell align=\"center\">Intended Major</TableCell>\r\n            <TableCell align=\"center\">SAT</TableCell>\r\n            <TableCell align=\"center\">EA/ED?</TableCell>\r\n            <TableCell align=\"center\">Common App</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          <StudentTableRow />\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}","import React from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\n// import { useStudent } from '../../context/StudentContext'\r\n\r\n// button\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\r\n\r\n// components\r\nimport StudentTable from './StudentTable'\r\n\r\n// const LOCAL_STORAGE_KEY = 'studentRoster.roster'\r\n\r\nexport default function StudentsContainer() {\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    // const { students, replaceStudents } = useStudent()\r\n  \r\n    function handleAddStudent() {\r\n      history.push('/new')\r\n    }\r\n    \r\n    // useEffect(() => {\r\n    //     const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY)\r\n    //     if (recipeJSON != null) replaceStudents(JSON.parse(recipeJSON))\r\n    // }, [])\r\n\r\n    // useEffect(() => {\r\n    //     localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(students))\r\n    // }, [students])\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                className={classes.button}\r\n                startIcon={<AddCircleIcon />}\r\n                onClick={handleAddStudent}\r\n            >\r\n                Add Student\r\n            </Button>\r\n            <Typography color=\"textSecondary\" style={{display: 'inline-block'}}>\r\n                Click on a row to view student details and edit or delete the student. \r\n            </Typography>\r\n            <StudentTable />\r\n        </div>\r\n    )\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      marginBottom: theme.spacing(2),\r\n      marginRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function AddtudentAddSectionTitle({ title, size }) {\r\n    return (\r\n        <Typography variant={size}>\r\n            {title}\r\n        </Typography>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function BasicInfo({ register, errors, student }) {\r\n    return (\r\n    <>\r\n        <TextField \r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            defaultValue={student.firstName}\r\n            inputRef={register({ required: \"Required\" })}\r\n            error={errors.firstName ? true : false}\r\n            helperText={errors.firstName && errors.firstName.message}\r\n        />\r\n        <TextField \r\n            label=\"Last Name\"\r\n            name=\"lastName\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            defaultValue={student.lastName}\r\n            inputRef={register({ required: \"Required\" })}\r\n            error={errors.lastName ? true : false}\r\n            helperText={errors.lastName && errors.lastName.message}\r\n        />\r\n        <TextField \r\n            label=\"Email\"\r\n            name=\"email\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            defaultValue={student.email}\r\n            inputRef={register({\r\n                required: \"required\",\r\n                pattern: {\r\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                    message: \"Entered value does not match email format\"\r\n                }\r\n            })}\r\n            error={errors.email ? true : false}\r\n            helperText={errors.email && errors.email.message}\r\n        />  \r\n        <TextField \r\n            label=\"High School\"\r\n            name=\"highSchool\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            defaultValue={student.highSchool}\r\n            inputRef={register({ required: \"Required\" })}\r\n            error={errors.highSchool ? true : false}\r\n            helperText={errors.highSchool && errors.highSchool.message}\r\n        />  \r\n        <TextField \r\n            label=\"Grade\"\r\n            name=\"grade\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            defaultValue={student.grade}\r\n            inputRef={register({ \r\n                required: \"Required\",\r\n                max: {\r\n                    value: 14,\r\n                    message: \"Grade must be less than 14.\"\r\n                },\r\n                min: {\r\n                    value: 1,\r\n                    message: \"Grade must be greater than 0.\"\r\n                }\r\n            })}\r\n            error={errors.grade ? true : false}\r\n            helperText={errors.grade && errors.grade.message}\r\n        />  \r\n        <TextField \r\n            label=\"Prospective Major\"\r\n            name=\"major\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            defaultValue={student.major}\r\n            inputRef={register()}\r\n        /> \r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport AddStudentSectionTitle from '../AddStudentSectionTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport default function PsatAdd({ register, errors, psat }) {\r\n    return (\r\n        <>\r\n            <AddStudentSectionTitle title=\"PSAT\" size=\"h6\"/>\r\n                <TextField \r\n                    label=\"Math\"\r\n                    name=\"psat.math\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    defaultValue={psat.math}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 760,\r\n                            message: \"Score must be 760 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.psat && errors.psat.math) ? true : false}\r\n                    helperText={(errors.psat && errors.psat.math) && errors.psat.math.message}\r\n                /> \r\n                <TextField \r\n                    label=\"Reading & Writing\"\r\n                    name=\"psat.readingWriting\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    defaultValue={psat.readingWriting}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 760,\r\n                            message: \"Score must be 760 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"                        \r\n                        }\r\n                    })}\r\n                    error={(errors.psat && errors.psat.readingWriting) ? true : false}\r\n                    helperText={(errors.psat && errors.psat.readingWriting) && errors.psat.readingWriting.message}\r\n                />  \r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport AddStudentSectionTitle from '../AddStudentSectionTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport default function SatAdd({ register, errors, sat }) {\r\n    return (\r\n        <>\r\n            <AddStudentSectionTitle title=\"SAT\" size=\"h6\"/>\r\n                <TextField \r\n                    label=\"Math\"\r\n                    variant=\"outlined\"\r\n                    name=\"sat.math\"\r\n                    type=\"number\"\r\n                    defaultValue={sat.math}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 800,\r\n                            message: \"Score must be 800 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.sat && errors.sat.math) ? true : false}\r\n                    helperText={(errors.sat && errors.sat.math) && errors.sat.math.message}\r\n                /> \r\n                <TextField \r\n                    label=\"Verbal\"\r\n                    variant=\"outlined\"\r\n                    name=\"sat.verbal\"\r\n                    type=\"number\"\r\n                    defaultValue={sat.verbal}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 800,\r\n                            message: \"Score must be 800 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.sat && errors.sat.verbal) ? true : false}\r\n                    helperText={(errors.sat && errors.sat.verbal) && errors.sat.verbal.message}\r\n                />  \r\n                <TextField \r\n                    label=\"Essay\"\r\n                    variant=\"outlined\"\r\n                    name=\"sat.essay\"\r\n                    type=\"number\"\r\n                    defaultValue={sat.essay}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 8,\r\n                            message: \"Score must be 8 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.sat && errors.sat.essay) ? true : false}\r\n                    helperText={(errors.sat && errors.sat.essay) && errors.sat.essay.message}\r\n                />  \r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport AddStudentSectionTitle from '../AddStudentSectionTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport default function SatAdd({ register, errors, act }) {\r\n    return (\r\n        <>\r\n            <AddStudentSectionTitle title=\"ACT\" size=\"h6\"/>\r\n                <TextField \r\n                    label=\"STEM\"\r\n                    variant=\"outlined\"\r\n                    name=\"act.stem\"\r\n                    type=\"number\"\r\n                    defaultValue={act.stem}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 36,\r\n                            message: \"Score must be 36 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.act && errors.act.stem) ? true : false}\r\n                    helperText={(errors.act && errors.act.stem) && errors.act.stem.message}\r\n                /> \r\n                <TextField \r\n                    label=\"ELA\"\r\n                    variant=\"outlined\"\r\n                    name=\"act.ela\"\r\n                    type=\"number\"\r\n                    defaultValue={act.ela}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 36,\r\n                            message: \"Score must be 36 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.act && errors.act.ela) ? true : false}\r\n                    helperText={(errors.act && errors.act.ela) && errors.act.ela.message}\r\n                />   \r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { useFieldArray} from \"react-hook-form\"\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddStudentSectionTitle from '../AddStudentSectionTitle'\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\n\r\nexport default function SubjectTestAdd({ control, register, errors }) {\r\n    const classes = useStyles();\r\n    const { fields, remove, append } = useFieldArray(\r\n        {\r\n          control,\r\n          name: \"satSubjectTests\",\r\n          keyName: 'react-hook-id' // deafult and you can rename to others\r\n        }\r\n    );\r\n\r\n    return (\r\n    <>\r\n        <AddStudentSectionTitle title=\"SAT Subject Tests\" size=\"h6\" />\r\n        {fields.map((field, index) => {\r\n          return (\r\n            <div key={field.id} className={classes.container}>\r\n                <TextField \r\n                    label=\"Test Type\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name={`satSubjectTests[${index}].type`}\r\n                    defaultValue={`${field.type}`}\r\n                    inputRef={register()}\r\n                />\r\n                <TextField \r\n                    label=\"Test Score\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name={`satSubjectTests[${index}].score`}\r\n                    defaultValue={`${field.score}`}\r\n                    inputRef={register({ valueAsNumber: true,})}\r\n                />\r\n\r\n                {/* hidden input to register the id */}\r\n                <input type=\"hidden\" key={field.id} name={`satSubjectTests[${index}].id`} ref={register()} defaultValue={`${field.id}`} />\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    startIcon={<RemoveCircleOutlineIcon />}\r\n                    onClick={() => remove(index)}\r\n                >\r\n                    Remove Subject Test\r\n                </Button> \r\n            </div>\r\n          );\r\n        })} \r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            className={classes.button}\r\n            startIcon={<AddCircleIcon />}\r\n            onClick={() => append({ id: uuidv4(), type: \"\", score: 0 })}\r\n        >\r\n            Add Subject Test\r\n        </Button> \r\n    </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        },\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        height: '35px',\r\n    }\r\n  }));\r\n\r\n","import React from 'react'\r\nimport { useFieldArray} from \"react-hook-form\"\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddStudentSectionTitle from '../AddStudentSectionTitle'\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\n\r\nexport default function ApAdd({ control, register, errors }) {\r\n    const classes = useStyles();\r\n    const { fields, remove, append } = useFieldArray(\r\n        {\r\n          control,\r\n          name: \"aps\",\r\n          keyName: 'react-hook-id' // deafult and you can rename to others\r\n        }\r\n    );\r\n\r\n    return (\r\n    <>\r\n        <AddStudentSectionTitle title=\"AP Exams\" size=\"h6\" />\r\n        {fields.map((field, index) => {\r\n          return (\r\n            <div key={field.id} className={classes.container}>\r\n                <TextField \r\n                    label=\"Test Type\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name={`aps[${index}].type`}\r\n                    defaultValue={`${field.type}`}\r\n                    inputRef={register()}\r\n                />\r\n                <TextField \r\n                    label=\"Test Score\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name={`aps[${index}].score`}\r\n                    defaultValue={`${field.score}`}\r\n                    inputRef={register({ valueAsNumber: true,})}\r\n                />\r\n\r\n                {/* hidden input to register the id */}\r\n                <input type=\"hidden\" key={field.id} name={`aps[${index}].id`} ref={register()} defaultValue={`${field.id}`} />\r\n                \r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    startIcon={<RemoveCircleOutlineIcon />}\r\n                    onClick={() => remove(index)}\r\n                >\r\n                    Remove AP Exam\r\n                </Button> \r\n            </div>\r\n          );\r\n        })} \r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            className={classes.button}\r\n            startIcon={<AddCircleIcon />}\r\n            onClick={() => append({ id: uuidv4(), type: \"\", score: 0 })}\r\n        >\r\n            Add AP Exam\r\n        </Button> \r\n    </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        },\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        height: '35px',\r\n    }\r\n  }));\r\n\r\n","import React from 'react'\r\n// import { useStudent } from '../../../../context/StudentContext';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n// components\r\nimport PsatAdd from './individualTestAdd/PsatAdd'\r\nimport SatAdd from './individualTestAdd/SatAdd'\r\nimport ActAdd from './individualTestAdd/ActAdd'\r\nimport SubjectTestAdd from './individualTestAdd/SubjectTestAdd'\r\nimport APAdd from './individualTestAdd/ApAdd'\r\n\r\nexport default function TestScoresAdd({ register, errors, student, control }) {\r\n    return (\r\n        <> \r\n        <Box mb={3} mt={2}>\r\n            <PsatAdd register={register} errors={errors} psat={student.psat} />\r\n        </Box>\r\n        <Divider variant=\"middle\" />\r\n        <Box mb={3} mt={2}>\r\n            <SatAdd register={register} errors={errors} sat={student.sat} />\r\n        </Box>\r\n        <Divider variant=\"middle\" />\r\n        <Box mb={3} mt={2}>\r\n            <ActAdd register={register} errors={errors} act={student.act} /> \r\n        </Box>\r\n        <Divider variant=\"middle\" />\r\n        <Box mb={3} mt={2}>\r\n            <SubjectTestAdd \r\n                register={register} \r\n                errors={errors} \r\n                control={control}\r\n            />\r\n        </Box>\r\n        <Divider variant=\"middle\" />\r\n        <Box mb={3} mt={2}>\r\n            <APAdd \r\n                register={register} \r\n                errors={errors} \r\n                control={control}\r\n            />\r\n        </Box>\r\n        </>\r\n    )\r\n}\r\n\r\n","import FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Controller } from \"react-hook-form\";\r\n\r\nconst ReactHookFormSelect = ({\r\n  name,\r\n  label,\r\n  control,\r\n  defaultValue,\r\n  children,\r\n  formClassName,\r\n  ...props\r\n}) => {\r\n  const labelId = `${name}-label`;\r\n  const classes = useStyles();\r\n  return (\r\n    <FormControl {...props} variant=\"outlined\" className={classes.formControl}>\r\n      <InputLabel id={labelId}>{label}</InputLabel>\r\n      <Controller\r\n        as={\r\n          <Select labelId={labelId} label={label}>\r\n            {children}\r\n          </Select>\r\n        }\r\n        name={name}\r\n        control={control}\r\n        defaultValue={defaultValue}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\nexport default ReactHookFormSelect;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 180,\r\n    },\r\n  }));","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { useFieldArray} from \"react-hook-form\"\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ReactHookFormSelect from './ReactHookFormSelect'\r\n\r\n\r\n\r\nexport default function CollegeListAdd({ control, register }) {\r\n    const classes = useStyles();\r\n    const { fields, remove, append } = useFieldArray(\r\n        {\r\n          control,\r\n          name: \"collegeList\",\r\n          keyName: 'react-hook-id' // deafult and you can rename to others\r\n        }\r\n    );\r\n\r\n    return (\r\n    <>\r\n        {fields.map((field, index) =>\r\n            <div key={field.id} className={classes.container}>\r\n                <TextField \r\n                    label='College'\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name={`collegeList[${index}].collegeName`}\r\n                    defaultValue={`${field.collegeName}`}\r\n                    inputRef={register()}\r\n                />\r\n\r\n                <ReactHookFormSelect\r\n                    name={`collegeList[${index}].cycle`}\r\n                    label=\"Cycle\"\r\n                    defaultValue={`${field.cycle}`}\r\n                    control={control}\r\n                >\r\n                {collegeCycles.map((cycle) => (\r\n                        <MenuItem key={cycle} value={cycle}>\r\n                                {cycle}\r\n                        </MenuItem>\r\n                    ))}\r\n                </ReactHookFormSelect>\r\n\r\n                {/* hidden input to register the id */}\r\n                <input type=\"hidden\" key={field.id} name={`collegeList[${index}].id`} ref={register()} defaultValue={`${field.id}`} />\r\n\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    startIcon={<RemoveCircleOutlineIcon />}\r\n                    onClick={() => remove(index)}\r\n                >\r\n                    Remove College\r\n                </Button>\r\n            </div>\r\n        )}\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            className={classes.button}\r\n            startIcon={<AddCircleIcon />}\r\n            onClick={() => append({ id: uuidv4(), collegeName: \"\", cycle: \"\" })}\r\n        >\r\n            Add College\r\n        </Button> \r\n    </>\r\n    )\r\n}\r\n\r\nconst collegeCycles = ['Early Action', 'Early Decision', 'Regular Decision']\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        },\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        height: '35px',\r\n    }\r\n  }));\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form'\r\nimport { useStudent } from '../../context/StudentContext'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n// material ui \r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Button from '@material-ui/core/Button'\r\n\r\n// components\r\nimport AddStudentSectionTitle from './AddStudentSectionTitle'\r\nimport AddBasicInfo from './AddBasicInfo'\r\nimport TestScoresAdd from './TestScoresAdd'\r\nimport CollegeListAdd from './CollegeListAdd'\r\n\r\nexport default function AddStudentContainer() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const {\r\n      handleResetNewStudent,\r\n      newStudent,\r\n      handleAppendNewStudent\r\n    } = useStudent()\r\n\r\n    const { register, control, handleSubmit, errors } = useForm({\r\n        defaultValues: {\r\n          sat: newStudent.sat,\r\n          aps: newStudent.aps,\r\n          collegeList: newStudent.collegeList\r\n        }\r\n      });\r\n\r\n    const onSubmit = data => { \r\n        handleAppendNewStudent({...newStudent, ...data})\r\n        handleResetNewStudent()\r\n        history.push(`/`)\r\n    }\r\n\r\n    return (\r\n    <form className={classes.root} onSubmit={handleSubmit(onSubmit)}>\r\n        <Box mb={3} mt={2}>\r\n            <AddStudentSectionTitle title=\"Basic Information\" size=\"h5\" />\r\n            <AddBasicInfo register={register} errors={errors} student={newStudent} />\r\n        </Box>\r\n        <Divider />\r\n        <Box mb={3} mt={2}>\r\n            <AddStudentSectionTitle title=\"Test Scores\" size=\"h5\" />\r\n            <TestScoresAdd register={register} errors={errors} student={newStudent} control={control} />\r\n        </Box>\r\n        <Divider />\r\n        <Box mb={3} mt={2}>\r\n            <AddStudentSectionTitle title=\"College List \" size=\"h5\" />\r\n            <CollegeListAdd register={register} errors={errors} control={control} />\r\n       </Box>\r\n        <Box mb={3} mt={2}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                type=\"submit\"            \r\n            >\r\n                Submit\r\n            </Button>\r\n        </Box>\r\n    </form>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(2),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }));\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// list\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root:{\r\n    fontSize:'.9em',\r\n  },\r\n  item: {\r\n    padding: 0\r\n  },\r\n}));\r\n\r\nexport default function Test({ testType }) {\r\n  const classes = useStyles();\r\n\r\n    return (\r\n        <ListItem classes={{ root: classes.item }}>\r\n            <ListItemText\r\n              classes={{ primary:classes.root, secondary:classes.root }}\r\n              primary={testType}\r\n            />\r\n        </ListItem>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Test from './Test'\r\n\r\n// list\r\nimport List from '@material-ui/core/List';\r\n\r\nexport default function APTest({ aps }) {\r\n    return (\r\n        <List>\r\n            {aps.map((ap) => \r\n                <Test key={ap.id} testType={`${ap.type}: ${ap.score}`}  />\r\n            )} \r\n        </List>\r\n    )\r\n}","// NOTE KNOWN ERROR WITH TEST.ID BEING REMOVED FROM REACT FORM\r\n\r\nimport React from 'react';\r\nimport Test from './Test'\r\n\r\n// list\r\nimport List from '@material-ui/core/List';\r\n\r\nexport default function SubjectTest({ satSubjectTests }) {\r\n    return (\r\n        <List>\r\n            {satSubjectTests.map((test, index) => \r\n                <Test key={test.id} testType={`SAT II ${test.type}: ${test.score}`}  />\r\n            )} \r\n        </List>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Test from './Test'\r\nimport APTest from './APTest'\r\nimport SubjectTest from './SubjectTest'\r\n\r\n// for list\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nexport default function StudentTestScores({ student }) {\r\n  const {\r\n    psat,\r\n    sat,\r\n    act,\r\n    aps,\r\n    satSubjectTests\r\n  } = student\r\n \r\n  function handleSumScores(testType) {\r\n    if (testType === \"psat\") {\r\n      return psat.readingWriting + psat.math\r\n    } else if (testType === 'sat') {\r\n      return sat.math + sat.verbal\r\n    } else if (testType === 'act') {\r\n      return (act.stem + act.ela)/2\r\n    }\r\n    return \"Error in computing the sum of the score.\"\r\n  }\r\n\r\n  function handleScoreBreakdown(testType) {    \r\n    if (testType === \"psat\") {\r\n        return `Math: ${psat.math}; Reading and Writing: ${psat.readingWriting}`\r\n      } else if (testType === \"sat\") {\r\n        return `Math: ${sat.math}; Reading and Writing: ${sat.verbal}; Essay: ${sat.essay}`\r\n      } else if (testType === \"act\") {\r\n        return `STEM: ${act.stem}; ELA: ${act.ela}`\r\n      } \r\n      return \"Error in computing score breakdown.\"\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\">\r\n        Test Scores\r\n      </Typography>\r\n        <List >\r\n            <Test testType={`PSAT: ${handleSumScores('psat')}`} testScores={handleScoreBreakdown('psat')} />\r\n        </List>\r\n      <Divider />\r\n        <List>\r\n          <Test testType={`SAT: ${handleSumScores('sat')}`} testScores={handleScoreBreakdown('sat')} />\r\n        </List>\r\n      <Divider />\r\n        <List >\r\n            <Test testType={`ACT: ${handleSumScores('act')}`} testScores={handleScoreBreakdown('act')} />\r\n        </List>\r\n      <Divider />\r\n        <APTest aps={aps} />\r\n      <Divider />\r\n        <SubjectTest satSubjectTests={satSubjectTests} />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n// OPTIONAL: pull data from \"https://api.data.gov/ed/collegescorecard/v1/\")\r\n\r\nexport default function CollegeListContainer({ collegeList }) {\r\n  return (\r\n  <>\r\n    <Typography variant=\"h6\">\r\n      College List\r\n    </Typography>\r\n    <TableContainer>\r\n      <Table size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>College</TableCell>\r\n            <TableCell align=\"center\">Category</TableCell>\r\n            <TableCell align=\"center\">Acceptance Rate</TableCell>\r\n            <TableCell align=\"center\">Application Cycle</TableCell>\r\n            <TableCell align=\"center\">Middle 50% SAT</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {collegeList.map((college) => ( \r\n            <TableRow key={college.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {college.collegeName}\r\n              </TableCell>\r\n              <TableCell align=\"center\">todo: collegescorecard API</TableCell>\r\n              <TableCell align=\"center\">todo: collegescorecard API</TableCell>\r\n              <TableCell align=\"center\">{college.cycle}</TableCell>\r\n              <TableCell align=\"center\">todo: collegescorecard API</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  </>\r\n  );\r\n}","import React from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\n\r\n// context\r\nimport { useStudent } from '../../context/StudentContext' \r\n\r\n// components\r\nimport TestContainer from './test/TestContainer'\r\nimport Calendar from 'react-calendar'\r\nimport CollegeList from './CollegeList'\r\n\r\n// material ui\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Card from \"@material-ui/core/Card\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { Button, CardContent } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\nexport default function StudentContainer() {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const {\r\n    handleStudentSelect,\r\n    findStudent,\r\n    handleDeleteStudent\r\n  } = useStudent()\r\n\r\n  const { studentId } = useParams()\r\n\r\n  const student = findStudent(studentId) \r\n\r\n  function handleEditButton(id) {\r\n    handleStudentSelect(id)\r\n    history.push(`/students/edit/${id}`)\r\n  }\r\n\r\n  function handleDelete(id) {\r\n    handleDeleteStudent(id)\r\n    history.push(`/`)\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={3} justify=\"space-between\">\r\n        <Grid item xs={2}>\r\n            <Typography variant=\"h5\">\r\n                {`${student.firstName} ${student.lastName}`}\r\n            </Typography>\r\n        </Grid>\r\n        <Grid item xs={5} />\r\n        <Grid item xs={5}>\r\n          <Grid container justify=\"flex-end\">\r\n          <Button \r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            startIcon={<EditIcon />}\r\n            onClick={() => handleEditButton(student.id)} // TODO\r\n          >\r\n            Edit Student\r\n          </Button>\r\n            <Button \r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"small\" \r\n              onClick={() => handleDelete(student.id)}\r\n              startIcon={<DeleteIcon />} \r\n            >\r\n              Delete Student\r\n            </Button>\r\n            </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Card>\r\n            <CardContent>\r\n                <TestContainer student={student} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">\r\n                Calendar (todo: add scheduling)\r\n              </Typography>\r\n                <Calendar />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <CollegeList collegeList={student.collegeList} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(2),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    button: {\r\n      marginRight: theme.spacing(2)\r\n    }\r\n  }));","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function EditStudentAddSectionTitle({ title, size }) {\r\n    return (\r\n        <Typography variant={size}>\r\n            {title}\r\n        </Typography>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function BasicInfo({ register, errors, student }) {\r\n    return (\r\n    <>\r\n        <TextField \r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            defaultValue={student.firstName}\r\n            inputRef={register({ required: \"Required\" })}\r\n            error={errors.firstName ? true : false}\r\n            helperText={errors.firstName && errors.firstName.message}\r\n        />\r\n        <TextField \r\n            label=\"Last Name\"\r\n            name=\"lastName\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            defaultValue={student.lastName}\r\n            inputRef={register({ required: \"Required\" })}\r\n            error={errors.lastName ? true : false}\r\n            helperText={errors.lastName && errors.lastName.message}\r\n        />\r\n        <TextField \r\n            label=\"Email\"\r\n            name=\"email\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            defaultValue={student.email}\r\n            inputRef={register({\r\n                required: \"required\",\r\n                pattern: {\r\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                    message: \"Entered value does not match email format\"\r\n                }\r\n            })}\r\n            error={errors.email ? true : false}\r\n            helperText={errors.email && errors.email.message}\r\n        />  \r\n        <TextField \r\n            label=\"High School\"\r\n            name=\"highSchool\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            defaultValue={student.highSchool}\r\n            inputRef={register({ required: \"Required\" })}\r\n            error={errors.highSchool ? true : false}\r\n            helperText={errors.highSchool && errors.highSchool.message}\r\n        />  \r\n        <TextField \r\n            label=\"Grade\"\r\n            name=\"grade\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            defaultValue={student.grade}\r\n            inputRef={register({ \r\n                required: \"Required\",\r\n                max: {\r\n                    value: 14,\r\n                    message: \"Grade must be less than 14.\"\r\n                },\r\n                min: {\r\n                    value: 1,\r\n                    message: \"Grade must be greater than 0.\"\r\n                }\r\n            })}\r\n            error={errors.grade ? true : false}\r\n            helperText={errors.grade && errors.grade.message}\r\n        />  \r\n        <TextField \r\n            label=\"Prospective Major\"\r\n            name=\"major\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            defaultValue={student.major}\r\n            inputRef={register({ required: \"Required\" })}\r\n            error={errors.major ? true : false}\r\n            helperText={errors.major && errors.major.message}\r\n        /> \r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport EditStudentSectionTitle from '../EditStudentSectionTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport default function PsatAdd({ register, errors, psat }) {\r\n    return (\r\n        <>\r\n            <EditStudentSectionTitle title=\"PSAT\" size=\"h6\"/>\r\n                <TextField \r\n                    label=\"Math\"\r\n                    name=\"psat.math\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    defaultValue={psat.math}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 760,\r\n                            message: \"Score must be 760 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 160,\r\n                            message: \"Score cannot be less than 160.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.psat && errors.psat.math) ? true : false}\r\n                    helperText={(errors.psat && errors.psat.math) && errors.psat.math.message}\r\n                /> \r\n                <TextField \r\n                    label=\"Reading & Writing\"\r\n                    name=\"psat.readingWriting\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    defaultValue={psat.readingWriting}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 760,\r\n                            message: \"Score must be 760 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 160,\r\n                            message: \"Score cannot be less than 160.\"                        \r\n                        }\r\n                    })}\r\n                    error={(errors.psat && errors.psat.readingWriting) ? true : false}\r\n                    helperText={(errors.psat && errors.psat.readingWriting) && errors.psat.readingWriting.message}\r\n                />  \r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport EditStudentSectionTitle from '../EditStudentSectionTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport default function SatAdd({ register, errors, sat }) {\r\n    return (\r\n        <>\r\n            <EditStudentSectionTitle title=\"SAT\" size=\"h6\"/>\r\n                <TextField \r\n                    label=\"Math\"\r\n                    variant=\"outlined\"\r\n                    name=\"sat.math\"\r\n                    type=\"number\"\r\n                    defaultValue={sat.math}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 800,\r\n                            message: \"Score must be 800 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 200,\r\n                            message: \"Score cannot be less than 200.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.sat && errors.sat.math) ? true : false}\r\n                    helperText={(errors.sat && errors.sat.math) && errors.sat.math.message}\r\n                /> \r\n                <TextField \r\n                    label=\"Verbal\"\r\n                    variant=\"outlined\"\r\n                    name=\"sat.verbal\"\r\n                    type=\"number\"\r\n                    defaultValue={sat.verbal}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 800,\r\n                            message: \"Score must be 800 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 200,\r\n                            message: \"Score cannot be less than 200.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.sat && errors.sat.verbal) ? true : false}\r\n                    helperText={(errors.sat && errors.sat.verbal) && errors.sat.verbal.message}\r\n                />  \r\n                <TextField \r\n                    label=\"Essay\"\r\n                    variant=\"outlined\"\r\n                    name=\"sat.essay\"\r\n                    type=\"number\"\r\n                    defaultValue={sat.essay}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 8,\r\n                            message: \"Score must be 8 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.sat && errors.sat.essay) ? true : false}\r\n                    helperText={(errors.sat && errors.sat.essay) && errors.sat.essay.message}\r\n                />  \r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport EditStudentSectionTitle from '../EditStudentSectionTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport default function SatAdd({ register, errors, act }) {\r\n    return (\r\n        <>\r\n            <EditStudentSectionTitle title=\"ACT\" size=\"h6\"/>\r\n                <TextField \r\n                    label=\"STEM\"\r\n                    variant=\"outlined\"\r\n                    name=\"act.stem\"\r\n                    type=\"number\"\r\n                    defaultValue={act.stem}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 36,\r\n                            message: \"Score must be 36 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.act && errors.act.stem) ? true : false}\r\n                    helperText={(errors.act && errors.act.stem) && errors.act.stem.message}\r\n                /> \r\n                <TextField \r\n                    label=\"ELA\"\r\n                    variant=\"outlined\"\r\n                    name=\"act.ela\"\r\n                    type=\"number\"\r\n                    defaultValue={act.ela}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 36,\r\n                            message: \"Score must be 36 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.act && errors.act.ela) ? true : false}\r\n                    helperText={(errors.act && errors.act.ela) && errors.act.ela.message}\r\n                />   \r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { useFieldArray} from \"react-hook-form\"\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport EditStudentSectionTitle from '../EditStudentSectionTitle'\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\n\r\nexport default function SubjectTestEdit({ control, register, errors }) {\r\n    const classes = useStyles();\r\n    const { fields, remove, append } = useFieldArray(\r\n        {\r\n          control,\r\n          name: \"satSubjectTests\",\r\n          keyName: 'react-hook-id' // deafult and you can rename to others\r\n        }\r\n    );\r\n\r\n    return (\r\n    <>\r\n        <EditStudentSectionTitle title=\"SAT Subject Tests\" size=\"h6\" />\r\n        {fields.map((field, index) => {\r\n          return (\r\n            <div key={index} className={classes.container}>\r\n                <TextField \r\n                    label=\"Test Type\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name={`satSubjectTests[${index}].type`}\r\n                    defaultValue={`${field.type}`}\r\n                    inputRef={register()}\r\n                />\r\n                <TextField \r\n                    label=\"Test Score\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name={`satSubjectTests[${index}].score`}\r\n                    defaultValue={`${field.score}`}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 800,\r\n                            message: \"Score must be 800 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.satSubjectTests && errors.satSubjectTests[index]) ? true : false}\r\n                    helperText={\r\n                        (errors.satSubjectTests && errors.satSubjectTests[index]) \r\n                        && errors.satSubjectTests[`${index}`].score.message\r\n                    }\r\n                />\r\n\r\n                {/* hidden input to register the id */}\r\n                <input type=\"hidden\" key={field.id} name={`satSubjectTests[${index}].id`} ref={register()} defaultValue={`${field.id}`} />\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    startIcon={<RemoveCircleOutlineIcon />}\r\n                    onClick={() => remove(index)}\r\n                >\r\n                    Remove Subject Test\r\n                </Button> \r\n            </div>\r\n          );\r\n        })} \r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            className={classes.button}\r\n            startIcon={<AddCircleIcon />}\r\n            onClick={() => append({ id: uuidv4(), type: \"\", score: 0 })}\r\n        >\r\n            Add Subject Test\r\n        </Button> \r\n    </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        },\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        height: '35px',\r\n    }\r\n  }));\r\n\r\n","import React from 'react'\r\nimport { useFieldArray} from \"react-hook-form\"\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport EditStudentSectionTitle from '../EditStudentSectionTitle'\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\n\r\nexport default function ApEdit({ control, register, errors }) {\r\n    const classes = useStyles();\r\n    const { fields, remove, append } = useFieldArray(\r\n        {\r\n          control,\r\n          name: \"aps\",\r\n          keyName: 'react-hook-id' // deafult and you can rename to others\r\n        }\r\n    );\r\n\r\n    return (\r\n    <>\r\n        <EditStudentSectionTitle title=\"AP Exams\" size=\"h6\" />\r\n        {fields.map((field, index) => {\r\n          return (\r\n            <div key={index} className={classes.container}>\r\n                <TextField \r\n                    label=\"Test Type\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name={`aps[${index}].type`}\r\n                    defaultValue={`${field.type}`}\r\n                    inputRef={register()}\r\n                />\r\n                <TextField \r\n                    label=\"Test Score\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name={`aps[${index}].score`}\r\n                    defaultValue={`${field.score}`}\r\n                    inputRef={register({ \r\n                        valueAsNumber: true,\r\n                        max: {\r\n                            value: 5,\r\n                            message: \"Score must be 5 or less.\"\r\n                        },\r\n                        min: {\r\n                            value: 0,\r\n                            message: \"Score cannot be negative.\"\r\n                        }\r\n                    })}\r\n                    error={(errors.aps && errors.aps[index]) ? true : false}\r\n                    helperText={\r\n                        (errors.aps && errors.aps[index]) \r\n                        && errors.aps[`${index}`].score.message\r\n                    }\r\n                />\r\n\r\n                {/* hidden input to register the id */}\r\n                <input type=\"hidden\" key={field.id} name={`aps[${index}].id`} ref={register()} defaultValue={`${field.id}`} />\r\n                \r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    startIcon={<RemoveCircleOutlineIcon />}\r\n                    onClick={() => remove(index)}\r\n                >\r\n                    Remove AP Exam\r\n                </Button> \r\n            </div>\r\n          );\r\n        })} \r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            className={classes.button}\r\n            startIcon={<AddCircleIcon />}\r\n            onClick={() => append({ id: uuidv4(), type: \"\", score: 0 })}\r\n        >\r\n            Add AP Exam\r\n        </Button> \r\n    </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        },\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        height: '35px',\r\n    }\r\n  }));\r\n\r\n","import React from 'react'\r\n// import { useStudent } from '../../../../context/StudentContext';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n// components\r\nimport PsatEdit from './individualTestEdit/PsatEdit'\r\nimport SatEdit from './individualTestEdit/SatEdit'\r\nimport ActEdit from './individualTestEdit/ActEdit'\r\nimport SubjectTestEditNew from './individualTestEdit/SubjectTestEdit'\r\nimport APEdit from './individualTestEdit/ApEdit'\r\n\r\nexport default function TestScoresEdit({ register, errors, student, control }) {\r\n    return (\r\n        <> \r\n        <Box mb={3} mt={2}>\r\n            <PsatEdit register={register} errors={errors} psat={student.psat} />\r\n        </Box>\r\n        <Divider variant=\"middle\" />\r\n        <Box mb={3} mt={2}>\r\n            <SatEdit register={register} errors={errors} sat={student.sat} />\r\n        </Box>\r\n        <Divider variant=\"middle\" />\r\n        <Box mb={3} mt={2}>\r\n            <ActEdit register={register} errors={errors} act={student.act} /> \r\n        </Box>\r\n        <Divider variant=\"middle\" />\r\n        <Box mb={3} mt={2}>\r\n            <SubjectTestEditNew \r\n                register={register} \r\n                errors={errors} \r\n                control={control}\r\n            />\r\n        </Box>\r\n        <Divider variant=\"middle\" />\r\n        <Box mb={3} mt={2}>\r\n            <APEdit \r\n                register={register} \r\n                errors={errors} \r\n                control={control}\r\n            />\r\n        </Box>\r\n        </>\r\n    )\r\n}\r\n\r\n","import FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Controller } from \"react-hook-form\";\r\n\r\nconst ReactHookFormSelect = ({\r\n  name,\r\n  label,\r\n  control,\r\n  defaultValue,\r\n  children,\r\n  formClassName,\r\n  ...props\r\n}) => {\r\n  const labelId = `${name}-label`;\r\n  const classes = useStyles();\r\n  return (\r\n    <FormControl {...props} variant=\"outlined\" className={classes.formControl}>\r\n      <InputLabel id={labelId}>{label}</InputLabel>\r\n      <Controller\r\n        as={\r\n          <Select labelId={labelId} label={label}>\r\n            {children}\r\n          </Select>\r\n        }\r\n        name={name}\r\n        control={control}\r\n        defaultValue={defaultValue}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\nexport default ReactHookFormSelect;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 180,\r\n    },\r\n  }));","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { useFieldArray} from \"react-hook-form\"\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ReactHookFormSelect from './ReactHookFormSelect'\r\n\r\n\r\nexport default function CollegeListEdit({ control, register }) {\r\n    const classes = useStyles();\r\n    const { fields, remove, append } = useFieldArray(\r\n        {\r\n          control,\r\n          name: \"collegeList\",\r\n          keyName: 'react-hook-id' // deafult and you can rename to others\r\n        }\r\n    );\r\n\r\n    return (\r\n    <>\r\n        {fields.map((field, index) =>\r\n            <div key={index} className={classes.container}>\r\n                <TextField \r\n                    label='College'\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name={`collegeList[${index}].collegeName`}\r\n                    defaultValue={`${field.collegeName}`}\r\n                    inputRef={register()}\r\n                />\r\n\r\n                <ReactHookFormSelect\r\n                    name={`collegeList[${index}].cycle`}\r\n                    label=\"Cycle\"\r\n                    defaultValue={`${field.cycle}`}\r\n                    control={control}\r\n                >\r\n                {collegeCycles.map((cycle) => (\r\n                        <MenuItem key={cycle} value={cycle}>\r\n                                {cycle}\r\n                        </MenuItem>\r\n                    ))}\r\n                </ReactHookFormSelect>\r\n\r\n                {/* hidden input to register the id */}\r\n                <input \r\n                    type=\"hidden\" \r\n                    key={field.id} \r\n                    name={`collegeList[${index}].id`} \r\n                    ref={register()} \r\n                    defaultValue={`${field.id}`} \r\n                />\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    startIcon={<RemoveCircleOutlineIcon />}\r\n                    onClick={() => remove(index)}\r\n                >\r\n                    Remove College\r\n                </Button>\r\n            </div>\r\n        )}\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            className={classes.button}\r\n            startIcon={<AddCircleIcon />}\r\n            onClick={() => append({ id: uuidv4(), collegeName: \"\", cycle: \"\" })}\r\n        >\r\n            Add College\r\n        </Button> \r\n    </>\r\n    )\r\n}\r\n\r\nconst collegeCycles = ['Early Action', 'Early Decision', 'Regular Decision']\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        },\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        height: '35px',\r\n    }\r\n  }));\r\n","import React from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useStudent } from '../../../context/StudentContext'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\n\r\n// material ui \r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Button from '@material-ui/core/Button'\r\n\r\n// components\r\nimport EditStudentSectionTitle from './EditStudentSectionTitle'\r\nimport BasicInfo from './BasicInfo'\r\nimport TestScoresEdit from './TestScoresEdit'\r\nimport CollegeListEdit from './CollegeListEdit'\r\n\r\nexport default function EditStudentContainer() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const {\r\n        handleStudentChange,\r\n        findStudent\r\n      } = useStudent()\r\n    const { studentId } = useParams()\r\n    const student = findStudent(studentId) \r\n    const { register, control, handleSubmit, errors } = useForm({\r\n        defaultValues: {\r\n          sat: student.sat,\r\n          aps: student.aps,\r\n          collegeList: student.collegeList\r\n        }\r\n      });\r\n\r\n    const onSubmit = data => {\r\n        handleStudentChange(student.id, { ...student, ...data })\r\n        history.push(`/students/view/${student.id}`)\r\n    }\r\n\r\n    return (\r\n    <form className={classes.root} onSubmit={handleSubmit(onSubmit)}>\r\n        <Box mb={3} mt={2}>\r\n            <EditStudentSectionTitle title=\"Basic Information\" size=\"h5\" />\r\n            <BasicInfo register={register} errors={errors} student={student} />\r\n        </Box>\r\n        <Divider />\r\n        <Box mb={3} mt={2}>\r\n            <EditStudentSectionTitle title=\"Test Scores\" size=\"h5\" />\r\n            <TestScoresEdit register={register} errors={errors} student={student} control={control} />\r\n        </Box>\r\n        <Divider />\r\n        <Box mb={3} mt={2}>\r\n            <EditStudentSectionTitle title=\"College List \" size=\"h5\" />\r\n            <CollegeListEdit register={register} errors={errors} control={control} />\r\n       </Box>\r\n        <Box mb={3} mt={2}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                type=\"submit\"            \r\n            >\r\n                Submit\r\n            </Button>\r\n        </Box>\r\n    </form>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(2),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }));\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\n\r\n// components\r\nimport StudentOverviewOverviewContainer from './studentOverview/StudentOverviewContainer'\r\nimport AddStudentContainer from './addStudent/AddStudentContainer'\r\nimport StudentSingleContainer from './studentSingle/StudentSingleContainer'\r\nimport EditStudentContainer from './studentSingle/editStudent/EditStudentContainer'\r\n\r\nexport default function Routes() {\r\n    return (\r\n    <>\r\n      <Route exact path=\"/\" component={StudentOverviewOverviewContainer} />\r\n      <Route path=\"/new\" component={AddStudentContainer} />\r\n      <Route exact path=\"/students/view/:studentId\" component={StudentSingleContainer} />\r\n      <Route exact path=\"/students/edit/:studentId\" component={EditStudentContainer} />\r\n    </>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Switch, BrowserRouter as Router } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\n// context\r\nimport { StudentProvider } from '../context/StudentContext'\r\n\r\n// components\r\nimport MenuBar from './menubar/MenuBar'\r\nimport Routes from './Routes'\r\n\r\nexport default function Main() {\r\n    const appBarHeight = 50 // customized height of MenuBar\r\n    const classes = useStyles()    \r\n\r\n    return (\r\n        <StudentProvider>\r\n            <Router>\r\n                <div className={classes.root}>\r\n                    <MenuBar appBarHeight={appBarHeight} />\r\n                    <main className={classes.content}>\r\n                    <div style={{ \"height\": appBarHeight + 'px' }} />\r\n                        <Switch>\r\n                            <Routes />\r\n                        </Switch>\r\n                    </main>\r\n                </div>\r\n            </Router>\r\n        </StudentProvider>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex'\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        width: \"100%\",\r\n        margin: theme.spacing(3),\r\n    }\r\n}))","import Main from './components/Main'\n\nfunction App() {\n  return (\n    <>\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}